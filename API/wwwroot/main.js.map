{"version":3,"file":"main.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACXsC;;;AAO/B,MAAM,gBAAgB;IAI3B,YAAoB,gBAAkC,EAC5C,WAA6B,EAC7B,cAA8B;QAFpB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAC5C,gBAAW,GAAX,WAAW,CAAkB;QAC7B,mBAAc,GAAd,cAAc,CAAgB;QACpC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC;IACH,CAAC;IAEJ,QAAQ;;QACN,yBAAyB;QACzB,IAAI,CAAC,WAAI,CAAC,IAAI,0CAAE,KAAK,KAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;YAC1C,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YAC9B,OAAO;SACR;QAED,IAAI,UAAI,CAAC,IAAI,0CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YAC5D,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC5D;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;SAC/B;IACH,CAAC;;gFAxBU,gBAAgB;8GAAhB,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;IEGzB,yEAAyE;IAAA,uDAAqB;IAAA,4DAAM;;;IAA3B,0DAAqB;IAArB,kGAAqB;;ADF3F,MAAM,kBAAkB;IAK7B,YAA2B,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QAC7C,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG;YACd,cAAc,EAAE,WAAW;YAC3B,eAAe,EAAE,cAAc;SAChC;IACH,CAAC;IAED,UAAU,CAAC,GAAQ;IACnB,CAAC;IAED,gBAAgB,CAAC,EAAO;IACxB,CAAC;IAED,iBAAiB,CAAC,EAAO;IACzB,CAAC;;oFApBU,kBAAkB;gHAAlB,kBAAkB;QCT/B,yEAAkB;QACd,sEASC;QACD,8GAAoG;QACxG,4DAAM;;QATE,0DAA2D;QAA3D,uHAA2D;QAG3D,6FAAuB;QADvB,8FAAiC;QAM/B,0DAAwC;QAAxC,qJAAwC;;;;;;;;;;;;;;;;;;;;;;;;IEJ9C,yEAAyE;IAAA,uDAAwB;IAAA,4DAAM;;;IAA9B,0DAAwB;IAAxB,qGAAwB;;;IACjG,yEAA0E;IACtE,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,2KACJ;;;IACA,yEAA0E;IACtE,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,0KACJ;;;IACA,yEAA2E;IACvE,mFACJ;IAAA,4DAAM;;ADRH,MAAM,kBAAkB;IAI7B,YAA2B,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QAFtC,SAAI,GAAG,MAAM,CAAC;QAGrB,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;IACtC,CAAC;IAED,UAAU,CAAC,GAAQ;IACnB,CAAC;IAED,gBAAgB,CAAC,EAAO;IACxB,CAAC;IAED,iBAAiB,CAAC,EAAO;IACzB,CAAC;;oFAfU,kBAAkB;gHAAlB,kBAAkB;QCR/B,yEAAkB;QACd,sEAK0B;QAC1B,8GAAuG;QACvG,8GAEM;QACN,8GAEM;QACN,8GAEM;QACV,4DAAM;;QAfE,0DAA2D;QAA3D,uHAA2D;QAC3D,qFAAa;QAGb,6FAAqB;QADrB,8FAAiC;QAE/B,0DAAwC;QAAxC,qJAAwC;QACxC,0DAAyC;QAAzC,sJAAyC;QAGzC,0DAAyC;QAAzC,sJAAyC;QAGzC,0DAA0C;QAA1C,uJAA0C;;;;;;;;;;;;;;;;;;;;;ACVf;;;;AAM9B,MAAM,UAAU;IACrB,YAAoB,cAA8B,EAAU,MAAqB;QAA7D,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEtF,WAAW;QACT,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAC1C,mDAAG,CAAC,IAAI,CAAC,EAAE;YACT,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;gBACpE,OAAO,IAAI,CAAC;aACb;YACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAClD,CAAC,CAAC,CACH;IACH,CAAC;;oEAZU,UAAU;2GAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;;;;;;;;ACHiB;;;;AAK9B,MAAM,SAAS;IACpB,YAAoB,cAA8B,EAAU,MAAqB;QAA7D,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAe;IAAG,CAAC;IAErF,WAAW;QACT,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAC1C,mDAAG,CAAC,IAAI,CAAC,EAAE;YACT,IAAI,IAAI;gBAAE,OAAO,IAAI,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,CAAC;QAC1C,CAAC,CAAC,CACH;IACH,CAAC;;kEAVU,SAAS;0GAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;;;;;;;;;;;;;;;;;;;;ACCb,MAAM,0BAA0B;IAErC,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEtD,aAAa,CAAC,SAA8B;QAC1C,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE;YAC5B,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;SACrC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;oGATU,0BAA0B;2HAA1B,0BAA0B,WAA1B,0BAA0B,mBAFzB,MAAM;;;;;;;;;;;;;;;;;;;;;ACA0B;AAGF;;;;AAGrC,MAAM,gBAAgB;IAE3B,YAAoB,MAAc,EAAU,MAAqB;QAA7C,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAe;IAAG,CAAC;IAErE,SAAS,CAAC,OAA6B,EAAE,IAAiB;QACxD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,0DAAU,CAAC,KAAK,CAAC,EAAE;YACjB,IAAI,KAAK,EAAE;gBACT,QAAQ,KAAK,CAAC,MAAM,EAAE;oBACpB,KAAK,GAAG;wBACN,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;4BACtB,MAAM,gBAAgB,GAAG,EAAE,CAAC;4BAC5B,KAAK,MAAM,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;gCACpC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;oCAC3B,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iCAC/C;6BACF;4BACD,MAAM,gBAAgB,CAAC,IAAI,EAAE,CAAC;yBAC/B;6BAAM,IAAI,OAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,QAAQ,EAAE;4BAC3C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;yBACnD;6BAAM;4BACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;yBAC9C;wBACD,MAAM;oBACR,KAAK,GAAG;wBACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;wBAC7E,MAAM;oBACR,KAAK,GAAG;wBACN,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;wBACxC,MAAM;oBACR,KAAK,GAAG;wBACN,MAAM,gBAAgB,GAAqB,EAAC,KAAK,EAAE,EAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAC,EAAC;wBACxE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;wBAC7D,MAAM;oBACR;wBACE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;wBACrD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACnB,MAAM;iBACT;aACF;YACD,OAAO,gDAAU,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CACH;IACH,CAAC;;gFA3CU,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB;;;;;;;;;;;;;;;;;;;ACHS;;;AAG/B,MAAM,cAAc;IAEzB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEtD,SAAS,CAAC,OAA6B,EAAE,IAAiB;QACxD,IAAI,WAAiB,CAAC;QAEtB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC;QACrF,IAAI,WAAW,EAAE;YACf,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,UAAU,EAAE;oBACV,aAAa,EAAE,UAAU,WAAW,CAAC,KAAK,EAAE;iBAC7C;aACF,CAAC;SACH;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;4EAjBU,cAAc;+GAAd,cAAc,WAAd,cAAc;;;;;;;;;;;;;;;;;;;ACJsB;;;AAG1C,MAAM,kBAAkB;IAE7B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,SAAS,CAAC,OAA6B,EAAE,IAAiB;QACxD,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACxB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,wDAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAC1B,CAAC,CAAC,CACH;IACH,CAAC;;oFAXU,kBAAkB;mHAAlB,kBAAkB,WAAlB,kBAAkB;;;;;;;;;;;;;;;;ACLxB,MAAM,eAAe;CAG3B;;;;;;;;;;;;;;;;ACRM,MAAM,UAAU;IAQnB,YAAY,IAAU;QANtB,WAAM,GAAG,EAAE,CAAC;QACZ,WAAM,GAAG,EAAE,CAAC;QACZ,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,EAAE,CAAC;QACd,YAAO,GAAG,YAAY,CAAC;QAGnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC;IAC/D,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ8C;AACW;AAChB;AACM;AACK;AACJ;AACW;AACA;AACN;AACV;AACM;;;;;;;;;;AAgC3C,MAAM,YAAY;;wEAAZ,YAAY;yGAAZ,YAAY;6GA5Bd;YACP,yDAAY;YACZ,4EAAwB,EAAE;YAC1B,4DAAoB,CAAC;gBACnB,aAAa,EAAE,oBAAoB;aACpC,CAAC;YACF,kEAAkB,EAAE;YACpB,iEAAgB;YAChB,6DAAgB;YAChB,gFAA0B,EAAE;YAC5B,8EAAwB,EAAE;YAC1B,wEAAqB,EAAE;YACvB,+DAAqB,EAAE;YACvB,qEAAmB,EAAE;SACtB,EAEC,oEAAgB;QAChB,oDAAY;QACZ,0DAAU;QACV,iEAAgB;QAChB,6DAAgB;QAChB,wEAAkB;QAClB,sEAAgB;QAChB,gEAAa;QACb,uDAAa;QACb,6DAAW;mIAGF,YAAY,cA3BrB,yDAAY,0LAMZ,iEAAgB;QAChB,6DAAgB,yVAQhB,oEAAgB;QAChB,oDAAY;QACZ,0DAAU;QACV,iEAAgB;QAChB,6DAAgB;QAChB,wEAAkB;QAClB,sEAAgB;QAChB,gEAAa;QACb,uDAAa;QACb,6DAAW;;;;;;;;;;;;;;;;;;;;AC/BR,MAAM,sBAAsB;IAE/B,YAAoB,aAA6B;QAA7B,kBAAa,GAAb,aAAa,CAAgB;IAAG,CAAC;IAErD,OAAO,CAAC,KAA6B;QACjC,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IACxE,CAAC;;4FANQ,sBAAsB;uHAAtB,sBAAsB,WAAtB,sBAAsB,mBAFnB,MAAM;;;;;;;;;;;;;;;;;;;;;;;ACLa;AAEE;AACsB;;;;;AAOpD,MAAM,cAAc;IAKzB,YAAoB,IAAgB,EAAU,QAAyB,EAAU,MAAqB;QAAlF,SAAI,GAAJ,IAAI,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAe;QAJtG,YAAO,GAAG,4EAAkB,CAAC;QACrB,sBAAiB,GAAG,IAAI,+CAAa,CAAO,CAAC,CAAC,CAAC;QACvD,iBAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;IAEqD,CAAC;IAE3G,KAAK,CAAC,KAAU;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,EAAE,KAAK,CAAC,CAAC,IAAI,CAC/D,mDAAG,CAAC,CAAC,QAAc,EAAE,EAAE;YACrB,MAAM,IAAI,GAAG,QAAQ,CAAC;YACtB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC1B,IAAG,IAAI,CAAC,SAAS,EAAC;oBAChB,IAAI,CAAC,MAAM,EAAE,CAAC;iBACf;qBACG;oBACJ,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;oBACxC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAClD;aACA;QACH,CAAC,CAAC,CACH;IACH,CAAC;IAED,QAAQ,CAAC,KAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,KAAK,CAAC,CAAC,IAAI,CAClE,mDAAG,CAAC,CAAC,IAAU,EAAE,EAAE;YACjB,IAAI,IAAI,EAAE;gBACT,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;aACxC;QACH,CAAC,CAAC,CACH;IACH,CAAC;IAED,cAAc,CAAC,IAAU;QACvB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;QACpD,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEnE,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;IACpC,CAAC;IAED,eAAe,CAAC,KAAK;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;;4EArDU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;ACRuC;;;AAQpD,MAAM,YAAY;IAGvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,4EAAkB,CAAC;IAEW,CAAC;IAEzC,iBAAiB;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,OAAO,GAAG,wBAAwB,CAAC,CAAC;IACjF,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAwB,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,CAAC;IAC3E,CAAC;IAED,eAAe,CAAC,QAAgB,EAAE,KAAe;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,mBAAmB,GAAG,QAAQ,GAAG,SAAS,GAAG,KAAK,EAAE,EAAE,CAAC,CAAC;IAC/F,CAAC;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,OAAO,GAAG,0BAA0B,CAAC,CAAC;IAC3E,CAAC;IAED,YAAY,CAAC,OAAe;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,sBAAsB,GAAG,OAAO,EAAE,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,WAAW,CAAC,OAAe;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,GAAG,OAAO,EAAE,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,SAAS,CAAC,QAAgB;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,mBAAmB,GAAE,QAAQ,EAAE,EAAE,CAAC;IACzE,CAAC;IAED,WAAW,CAAC,QAAgB;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,GAAE,QAAQ,EAAE,EAAE,CAAC;IAC3E,CAAC;IAED,SAAS,CAAC,MAAc;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,2BAA2B,GAAE,MAAM,EAAE,EAAE,CAAC;IAC/E,CAAC;;wEAvCU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;;ACFb,MAAM,WAAW;IAGtB,YAAoB,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;QAFrD,qBAAgB,GAAG,CAAC,CAAC;IAEoC,CAAC;IAE1D,IAAI;QACF,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE;YAClC,IAAI,EAAE,kBAAkB;YACxB,OAAO,EAAE,qBAAqB;YAC9B,KAAK,EAAE,SAAS;SACjB,CAAC,CAAC;IACL,CAAC;IAED,IAAI;QACF,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,EAAE;YAC9B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;SAC5B;IACH,CAAC;;sEApBU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;;ACFc;AACyD;;;AAKpF,MAAM,cAAc;IAGzB,YAAoB,YAA4B;QAA5B,iBAAY,GAAZ,YAAY,CAAgB;IAAI,CAAC;IAErD,OAAO,CAAC,KAAK,GAAG,cAAc,EAC5B,OAAO,GAAG,mCAAmC,EAC7C,SAAS,GAAG,IAAI,EAChB,aAAa,GAAG,QAAQ;QACtB,MAAM,MAAM,GAAG;YACb,YAAY,EAAE;gBACZ,KAAK;gBACL,OAAO;gBACP,SAAS;gBACT,aAAa;aACd;SACF;QACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,mGAAsB,EAAE,MAAM,CAAC,CAAC;QAEzE,OAAO,IAAI,4CAAU,CAAU,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnD,CAAC;IAEO,SAAS;QACf,OAAO,CAAC,QAAQ,EAAE,EAAE;YAClB,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE;gBAC3D,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAC9C,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;YAEH,OAAO;gBACL,WAAW;oBACT,YAAY,CAAC,WAAW,EAAE,CAAC;gBAC7B,CAAC;aACF;QACH,CAAC;IACH,CAAC;;4EAnCU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;ACLuC;AAG3B;AACW;AAEQ;AAG2B;;;;AAMvE,MAAM,cAAc;IAQzB,YAAoB,IAAgB,EAAU,cAA8B;QAAxD,SAAI,GAAJ,IAAI,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAP5E,YAAO,GAAG,4EAAkB,CAAC;QAC7B,YAAO,GAAa,EAAE,CAAC;QACvB,gBAAW,GAAG,IAAI,GAAG,EAAE,CAAC;QAMtB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,UAAU,GAAG,IAAI,0DAAU,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC,CAAC;IACJ,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,aAAa,CAAC,MAAkB;QAC9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;IAC3B,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,GAAG,IAAI,0DAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,UAAU,CAAC,UAAsB;QAC/B,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACzE,IAAI,QAAQ,EAAE;YACZ,OAAO,wCAAE,CAAC,QAAQ,CAAC,CAAC;SACrB;QAED,IAAI,MAAM,GAAG,uEAAoB,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QAE9E,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC/D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC/D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;QACpD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;QAEtD,OAAO,qEAAkB,CAAW,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;aAC3E,IAAI,CAAC,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACnB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;YACpE,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,SAAS,CAAC,QAAgB;QACxB,MAAM,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;aAC1C,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;aAClD,IAAI,CAAC,CAAC,MAAc,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;QAE1D,IAAI,MAAM,EAAE;YACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;SACnB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC;IACnE,CAAC;IAED,YAAY,CAAC,MAAc;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,MAAM,CAAC,CAAC,IAAI,CACvD,mDAAG,CAAC,GAAG,EAAE;YACP,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;QAC/B,CAAC,CAAC,CACH;IACH,CAAC;IAED,YAAY,CAAC,OAAe;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,uBAAuB,GAAG,OAAO,EAAE,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,WAAW,CAAC,OAAe;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,GAAG,OAAO,CAAC,CAAC;IAC1E,CAAC;IAED,OAAO,CAAC,QAAgB;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,QAAQ,EAAE,EAAE,CAAC;IAC/D,CAAC;IAED,QAAQ,CAAC,SAAiB,EAAE,UAAU,EAAE,QAAQ;QAC9C,IAAI,MAAM,GAAG,uEAAoB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACxD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAC/C,OAAO,qEAAkB,CAAoB,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1F,CAAC;IAED,WAAW,CAAC,QAAgB;QAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,eAAe,CAAC,KAAU;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;IACxE,CAAC;;4EAhGU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;ACZqD;AAClC;AACD;AACqB;AAKmB;;;;AAKvE,MAAM,cAAc;IAOzB,YAAoB,IAAgB,EAAU,WAAwB;QAAlD,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QANtE,YAAO,GAAG,4EAAkB,CAAC;QAC7B,WAAM,GAAG,4EAAkB,CAAC;QAEpB,wBAAmB,GAAG,IAAI,iDAAe,CAAY,EAAE,CAAC,CAAC;QACjE,mBAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;IAEiB,CAAC;IAE3E,mBAAmB,CAAC,IAAU,EAAE,aAAqB;QACnD,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,oEAAoB,EAAE;aAC5C,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,eAAe,GAAG,aAAa,EAAE;YACtD,kBAAkB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK;SACrC,CAAC;aACD,sBAAsB,EAAE;aACxB,KAAK,EAAE;QAEV,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;aACvB,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aAClC,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;QAE1C,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,sBAAsB,EAAE,QAAQ,CAAC,EAAE;YACvD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1C,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC,EAAE;YAC5C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACrD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,EAAE,OAAO,CAAC,CAAC;YACvD,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,KAAY,EAAE,EAAE;YACrD,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,aAAa,CAAC,EAAE;gBAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;oBACrD,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wBACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;4BACrB,OAAO,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;yBACxC;oBACH,CAAC,CAAC;oBACF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;gBAC/C,CAAC,CAAC;aACH;QACH,CAAC,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC3B;IACH,CAAC;IAED,WAAW,CAAC,UAAU,EAAE,QAAQ,EAAE,SAAS;QACzC,IAAI,MAAM,GAAG,uEAAoB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACxD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAC/C,OAAO,qEAAkB,CAAY,IAAI,CAAC,OAAO,GAAG,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IACrF,CAAC;IAED,gBAAgB,CAAC,QAAgB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,OAAO,GAAG,kBAAkB,GAAG,QAAQ,CAAC,CAAC;IAChF,CAAC;IAEK,WAAW,CAAC,QAAgB,EAAE,OAAe;;YACjD,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,aAAa,EAAE,EAAC,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAC,CAAC;iBACpF,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QACxC,CAAC;KAAA;IAED,aAAa,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,GAAG,EAAE,CAAC,CAAC;IAC3D,CAAC;;4EAtEU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;;ACb0C;AACzB;AACmB;AAEjD,SAAS,kBAAkB,CAAI,GAAG,EAAE,MAAM,EAAE,IAAgB;IAC/D,MAAM,eAAe,GAAuB,IAAI,+DAAe,EAAK,CAAC;IACrE,OAAO,IAAI,CAAC,GAAG,CAAI,GAAG,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,CAC3D,mDAAG,CAAC,QAAQ,CAAC,EAAE;QACb,eAAe,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;QACvC,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;YAC/C,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;SAC7E;QACD,OAAO,eAAe,CAAC;IACzB,CAAC,CAAC,CACH,CAAC;AACJ,CAAC;AAEM,SAAS,oBAAoB,CAAC,UAAkB,EAAE,QAAgB;IACvE,IAAI,MAAM,GAAG,IAAI,4DAAU,EAAE,CAAC;IAE9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC5D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;IAExD,OAAO,MAAM,CAAC;AAChB,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACtBsE;AAElC;AACD;AACqB;;;;AAMpD,MAAM,eAAe;IAM1B,YAAoB,MAAqB,EAAU,MAAc;QAA7C,WAAM,GAAN,MAAM,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QALjE,WAAM,GAAG,4EAAkB,CAAC;QAEpB,sBAAiB,GAAG,IAAI,iDAAe,CAAW,EAAE,CAAC,CAAC;QAC9D,iBAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;IAEgB,CAAC;IAEtE,mBAAmB,CAAC,IAAU;QAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,oEAAoB,EAAE;aAC5C,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,EAAE;YACjC,kBAAkB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK;SACrC,CAAC;aACD,sBAAsB,EAAE;aACxB,KAAK,EAAE;QAEV,IAAI,CAAC,aAAa;aACf,KAAK,EAAE;aACP,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAEtC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,cAAc,EAAE,QAAQ,CAAC,EAAE;YAC/C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;gBACpD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,EAAE,QAAQ,CAAC,CAAC;YACvD,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,eAAe,EAAE,QAAQ,CAAC,EAAE;YAChD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;gBACpD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;YACzE,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,gBAAgB,EAAE,CAAC,SAAmB,EAAE,EAAE;YAC9D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAC,EAAE,EAAE;YAClE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,8BAA8B,CAAC;iBACvD,KAAK;iBACL,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;QACnF,CAAC,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/D,CAAC;;8EA9CU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEPZ,yEAAuD;IACnD,yEAAuB;IACnB,iFAA2C;IAC/C,4DAAM;IACV,4DAAM;;;IACN,yEAAqE;IACjE,yEAAuB;IACnB,kFAA6C;IACjD,4DAAM;IACV,4DAAM;;;IACN,yEAA4D;IACxD,yEAAuB;IACnB,sFAAqD;IACzD,4DAAM;IACV,4DAAM;;;;ADVP,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;iHAAnB,mBAAmB;QCPhC,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,yEAAuB;QACnB,4EAA8B;QAC1B,+GAIM;QACN,+GAIM;QACN,+GAIM;QACV,4DAAS;QACb,4DAAM;;QAhBkC,0DAAqB;QAArB,6IAAqB;QAKpB,0DAAkC;QAAlC,6IAAkC;QAK9B,0DAAqB;QAArB,6IAAqB;;;;;;;;;;;;;;;;;;;;;;;;;IEZ9D,yEAAmD;IAC/C,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,oEAA4E;IAE5E,yEAAyB;IACrB,4EAA6E;IAAjC,sYAAgC;IAAC,kEAAO;IAAA,4DAAS;IAC7F,4EAAsE;IAAhC,qYAA+B;IAAC,iEAAM;IAAA,4DAAS;IACzF,4DAAM;IACV,4DAAM;;;IAPE,0DAAkB;IAAlB,kFAAkB;IACjB,0DAAmB;IAAnB,qJAAmB;IAA2B,6FAAwB;;ADM5E,MAAM,wBAAwB;IAGnC,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnD,QAAQ;QACN,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,OAAO;QAClB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACrD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACtE,CAAC,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,OAAO;QACjB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACpD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACtE,CAAC,CAAC;IACJ,CAAC;;gGAzBU,wBAAwB;sHAAxB,wBAAwB;QCTrC,yEAAiB;QACb,oHAQM;QACV,4DAAM;;QATsC,0DAAS;QAAT,+EAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;IEM7C,qEAAyC;IACrC,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,4EAAyE;IAA7B,wYAA4B;IAAC,kEAAO;IAAA,4DAAS;IACzF,4EAAqE;IAA/B,0YAA8B;IAAC,iEAAM;IAAA,4DAAS;IACxF,4DAAK;;;IAJG,0DAAsB;IAAtB,sFAAsB;IACtB,0DAAqB;IAArB,qFAAqB;;ADC9B,MAAM,2BAA2B;IAGtC,YAAoB,cAA4B,EAAU,MAAqB;QAA3D,mBAAc,GAAd,cAAc,CAAc;QAAU,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEpF,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YACzD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,SAAqB;QAC3B,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;QAE5D,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAE,EAAE;YACxD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAAA,CAAC,CAAC,CAAC;QAGvF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kDAAkD,CAAC,CAAC;QACxE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IACD,MAAM,CAAC,EAAU;QACf,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAE,EAAE;YAC9C,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QAAA,CAAC,CAAC,CAAC;QAE3E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;QAC5C,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;;sGA/BU,2BAA2B;yHAA3B,2BAA2B;QCVxC,yEAAiB;QACb,2EAAqB;QACjB,qEAAI;QACA,wEAAwB;QAAA,mEAAQ;QAAA,4DAAK;QACrC,wEAAwB;QAAA,gFAAqB;QAAA,4DAAK;QAClD,gEAAS;QACb,4DAAK;QACL,qHAKK;QACT,4DAAQ;QACZ,4DAAM;;QAP4B,0DAAa;QAAb,mFAAa;;;;;;;;;;;;;;;;;;;;;;;ACJwC;;;;;;;;ICenE,4EAAkF;IAAnD,kaAAuB;IAA4B,uEAAY;IAAA,4DAAS;;;;IAP/G,qEAA+B;IAC3B,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,qEAAI;IACA,4EAA4D;IAApD,kYAA8B;IAAsB,qEAAU;IAAA,4DAAS;IACnF,4DAAK;IACL,qEAAI;IACA,+HAAuG;IAC3G,4DAAK;IACT,4DAAK;;;IARG,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAc;IAAd,8EAAc;IAKL,0DAAoB;IAApB,mFAAoB;;ADN1C,MAAM,uBAAuB;IAIlC,YAAoB,YAA0B,EAAU,YAA4B,EAC1E,MAAqB;QADX,iBAAY,GAAZ,YAAY,CAAc;QAAU,iBAAY,GAAZ,YAAY,CAAgB;QAC1E,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEpC,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACtD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,IAAU;QACd,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;QACzD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;IAC1D,CAAC;IAED,cAAc,CAAC,IAAU;QACvB,MAAM,MAAM,GAAG;YACb,KAAK,EAAE,uBAAuB;YAC9B,YAAY,EAAE;gBACZ,IAAI;gBACJ,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;aAChC;SACF;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iGAAmB,EAAE,MAAM,CAAC,CAAC;QACtE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC7D,MAAM,aAAa,GAAG;gBACpB,KAAK,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;aACxE,CAAC;YACF,IAAI,aAAa,EAAE;gBACjB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;oBACnF,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC;gBACvC,CAAC,CAAC;aACH;QACH,CAAC,CAAC;IACJ,CAAC;IAEO,aAAa,CAAC,IAAI;QACxB,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,MAAM,cAAc,GAAU;YAC5B,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;YAC/B,EAAC,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAC;YACvC,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;SAClC,CAAC;QAEF,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC5B,IAAI,OAAO,GAAG,KAAK,CAAC;YACpB,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;gBAChC,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;oBAC1B,OAAO,GAAG,IAAI,CAAC;oBACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACjB,MAAM;iBACP;aACF;YACD,IAAI,CAAC,OAAO,EAAE;gBACZ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClB;QACH,CAAC,CAAC;QACF,OAAO,KAAK,CAAC;IACf,CAAC;;8FAtEU,uBAAuB;qHAAvB,uBAAuB;QCZpC,yEAAiB;QACb,2EAAqB;QACjB,wEAAO;QACH,qEAAI;QACA,wEAAwB;QAAA,mEAAQ;QAAA,4DAAK;QACrC,wEAAwB;QAAA,uEAAY;QAAA,4DAAK;QACzC,mEAA6B;QAC7B,mEAA6B;QACjC,4DAAK;QACT,4DAAQ;QACR,yEAAO;QACH,oHASK;QACT,4DAAQ;QAEZ,4DAAQ;QACZ,4DAAM;;QAb2B,2DAAQ;QAAR,8EAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVc;AACD;AAC4B;AACM;AAC/B;AACS;AACjB;AACgC;AACN;AACS;AACF;AACG;AACN;AACC;AAC7B;;;AAEnD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAa,EAAC;IACpC;QACE,IAAI,EAAE,EAAE;QACR,qBAAqB,EAAE,QAAQ;QAC/B,WAAW,EAAE,CAAC,yDAAS,CAAC;QACxB,QAAQ,EAAE;YACR,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2FAAmB,EAAC;YACjD,EAAC,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,iGAAqB,EAAE,OAAO,EAAE,EAAC,MAAM,EAAE,wFAAsB,EAAC,EAAC;YACxG,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,2FAAmB,EAAE,aAAa,EAAE,CAAC,8FAA0B,CAAC,EAAC;YAClG,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,kEAAc,EAAC;YAC1C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,2EAAiB,EAAC;YAChD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,0FAAmB,EAAE,WAAW,EAAE,CAAC,4DAAU,CAAC,EAAC;SAC3E;KACF;IACD,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,0FAAmB,EAAC;IAChD,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,oFAAiB,EAAC;IACjD,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,6FAAoB,EAAC;IACvD,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,oFAAiB,EAAE,SAAS,EAAE,MAAM,EAAC;CAC9D,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;8GAAhB,gBAAgB;kHAHlB,CAAC,kEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,0DAAY;oIAEX,gBAAgB,qFAFjB,0DAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BjB,MAAM,YAAY;IAIvB,YAAoB,cAA8B,EAAU,QAAyB;QAAjE,mBAAc,GAAd,cAAc,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAHrF,UAAK,GAAG,gBAAgB,CAAC;IAG+D,CAAC;IAEzF,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,MAAM,IAAI,GAAS,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAC5D,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;SACzC;IAEH,CAAC;;wEAjBU,YAAY;0GAAZ,YAAY;QCXzB,8EAAa;QACT,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QACvB,4DAAc;QAEd,qEAAmB;QAEnB,yEAAiD;QAC7C,2EAA+B;QACnC,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRoD;AAEiB;AACT;AAEV;AACT;AACgC;AAC5B;AACG;AACY;AACgB;AACM;AAC/B;AACS;AACV;AACyB;AACZ;AACM;AACS;AACF;AACjB;AACiB;AACnC;AAC0B;AACY;AACP;AACA;AACgB;AACd;AACZ;AACwB;AACG;AACd;AACS;AACgB;AACP;;AA+C5F,MAAM,SAAS;;kEAAT,SAAS;uGAAT,SAAS,cAFR,wDAAY;4GALb;QACT,EAAE,OAAO,EAAE,oEAAiB,EAAE,QAAQ,EAAE,8EAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;QACvE,EAAE,OAAO,EAAE,oEAAiB,EAAE,QAAQ,EAAE,0EAAc,EAAE,KAAK,EAAE,IAAI,EAAE;QACrE,EAAE,OAAO,EAAE,oEAAiB,EAAE,QAAQ,EAAE,kFAAkB,EAAE,KAAK,EAAE,IAAI,EAAE;KAC1E,YAdQ;YACP,qEAAa;YACb,iEAAgB;YAChB,mEAAgB;YAChB,0FAAuB;YACvB,wDAAW;YACX,gEAAmB;YACnB,gEAAY;YACZ,0DAAgB;SACjB;oIAQU,SAAS,mBA3ClB,wDAAY;QACZ,4DAAY;QACZ,+DAAa;QACb,2EAAiB;QACjB,2FAAmB;QACnB,iGAAqB;QACrB,kEAAc;QACd,2EAAiB;QACjB,2FAAmB;QACnB,qFAAiB;QACjB,8FAAoB;QACpB,4FAAmB;QACnB,4FAAmB;QACnB,+FAAoB;QACpB,uFAAkB;QAClB,uFAAkB;QAClB,wGAAuB;QACvB,0FAAmB;QACnB,6EAAgB;QAChB,sGAAuB;QACvB,yGAAwB;QACxB,2FAAmB;QACnB,oGAAsB;QACtB,oHAA2B;QAC3B,6GAAyB,aAGzB,qEAAa;QACb,iEAAgB;QAChB,mEAAgB;QAChB,0FAAuB;QACvB,wDAAW;QACX,gEAAmB;QACnB,gEAAY;QACZ,0DAAgB;;;;;;;;;;;;;;;;;;;;ACnEb,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;+GAAjB,iBAAiB;QCP9B,yEAAuB;QACnB,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,4EAAmD;QAAA,8EAAmB;QAAA,4DAAS;QACnF,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;IEFN,wEAA4B;IACxB,wEAAwB;IAAA,uDAAwB;IAAA,4DAAK;IACrD,uEAA4B;IAAA,6HAAkE;IAAA,4DAAI;IAClG,oEAAG;IAAA,2EAAgB;IAAA,4DAAI;IACvB,qEAAI;IACA,qEAAI;IAAA,oFAAyB;IAAA,4DAAK;IAClC,sEAAI;IAAA,mFAAuB;IAAA,4DAAK;IAChC,sEAAI;IAAA,qFAAyB;IAAA,4DAAK;IAClC,sEAAI;IAAA,6GAAiD;IAAA,4DAAK;IAC1D,sEAAI;IAAA,4JAAgG;IAAA,4DAAK;IAC7G,4DAAK;IACL,qEAAG;IAAA,yIAA6E;IAAA,4DAAI;IACpF,2EAAyD;IAAA,wDAAiB;IAAA,4DAAO;IACrF,qEAAe;;;IAZa,0DAAwB;IAAxB,qGAAwB;IAWS,2DAAiB;IAAjB,qFAAiB;;ADLvE,MAAM,oBAAoB;IAG/B,YAAoB,MAAc;;QAAd,WAAM,GAAN,MAAM,CAAQ;QAChC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;QACtD,IAAI,CAAC,KAAK,GAAG,sBAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,MAAM,0CAAE,KAAK,0CAAE,KAAK,CAAC;IAC/C,CAAC;IAEF,QAAQ;IACR,CAAC;;wFATU,oBAAoB;kHAApB,oBAAoB;QCRjC,qEAAI;QAAA,qIAA0E;QAAA,4DAAK;QACnF,mIAae;;QAbA,0DAAW;QAAX,2EAAW;;;;;;;;;;;;;;;;;;;;;ACCiC;;;;;ICQ/C,qEAA2C;IACvC,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,oFACJ;;;IAJR,yEAA0D;IACtD,wEAAwB;IACpB,oHAEK;IACT,4DAAK;IACT,4DAAM;;;IAJwB,0DAAmB;IAAnB,4FAAmB;;ADD9C,MAAM,mBAAmB;IAI9B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,YAAO,GAAG,4EAAkB,CAAC;QAC7B,qBAAgB,GAAa,EAAE,CAAC;IAEQ,CAAC;IAEzC,QAAQ;IACR,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACnE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACrE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,oBAAoB,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACtE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC9D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACzE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;;sFAhDU,mBAAmB;iHAAnB,mBAAmB;QCThC,wEAAc;QACV,4EAAqE;QAA7D,2IAAS,iBAAa,IAAC;QAAsC,yEAAc;QAAA,4DAAS;QAC5F,4EAAqE;QAA7D,2IAAS,iBAAa,IAAC;QAAsC,yEAAc;QAAA,4DAAS;QAC5F,4EAAqE;QAA7D,2IAAS,iBAAa,IAAC;QAAsC,yEAAc;QAAA,4DAAS;QAC5F,4EAAqE;QAA7D,2IAAS,iBAAa,IAAC;QAAsC,yEAAc;QAAA,4DAAS;QAC5F,4EAA+E;QAAvE,2IAAS,2BAAuB,IAAC;QACrC,sFAAyB;QAAA,4DAAS;QAEtC,iHAMM;QACV,qEAAe;;QAPY,2DAAiC;QAAjC,iGAAiC;;;;;;;;;;;;;;;;;;;;;;;;;IEPxD,yEAAuD;IACnD,qEAAI;IAAA,0EAAe;IAAA,4DAAK;IACxB,uEAAgB;IAAA,4HAAiE;IAAA,4DAAI;IACrF,yEAAyB;IACrB,4EAAuE;IAA/D,sTAA0B;IAAqC,mEAAQ;IAAA,4DAAS;IACxF,4EAAoC;IAAA,qEAAU;IAAA,4DAAS;IAC3D,4DAAM;IACV,4DAAM;;;;IAEN,yEAA4C;IACxC,yEAAwC;IACpC,0EAAmB;IACf,mFAA6D;IAA/C,8VAA6C;IAAE,4DAAe;IAChF,4DAAM;IACV,4DAAM;IACV,4DAAM;;ADRH,MAAM,aAAa;IAGxB;QAFA,iBAAY,GAAG,KAAK,CAAC;IAEL,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACzC,CAAC;IAED,kBAAkB,CAAC,KAAc;QAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;;0EAdU,aAAa;2GAAb,aAAa;QCR1B,yEAA4B;QACxB,0GAOM;QAEN,yGAMM;QACV,4DAAM;;QAhBI,0DAAmB;QAAnB,mFAAmB;QASnB,0DAAkB;QAAlB,kFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEKpB,yEAAkD;IAC9C,iFAAqD;IACzD,4DAAM;;;IADe,0DAAiB;IAAjB,6EAAiB;;;;IAK9C,0EAA8D;IAC1D,iFASuB;IALnB,iWAAoC;IAM5C,4DAAa;IACb,4DAAM;;;IAVE,0DAAsB;IAAtB,+EAAsB;;ADbvB,MAAM,cAAc;IAOzB,YAAoB,aAA6B;QAA7B,kBAAa,GAAb,aAAa,CAAgB;QALjD,cAAS,GAAG,OAAO,CAAC;QACpB,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,CAAC,CAAC;IAGwC,CAAC;IAEtD,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC/F,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC/B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;QACxC,CAAC,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;;4EAvBU,cAAc;4GAAd,cAAc;QCV3B,yEAA8B;QAC1B,qEAAI;QAAA,uDAAoE;QAAA,4DAAK;QACjF,4DAAM;QAEN,yEAA4B;QACxB,yEAAoB;QAChB,yEAAwC;QACpC,4EACkD;QAA9C,sLAAuB,8EAAU,eAAW,IAArB;QAAuB,yEAAc;QAAA,4DAAS;QACzE,4EACkD;QAA9C,sLAAuB,8EAAU,eAAW,IAArB;QAAuB,8EAAmB;QAAA,4DAAS;QAClF,4DAAM;QACV,4DAAM;QAEN,0EAAsB;QAClB,4GAEM;QACV,4DAAM;QACV,4DAAM;QAEN,4GAYM;;QAhCE,0DAAoE;QAApE,qIAAoE;QAO5D,0DAAuB;QAAvB,kFAAuB;QAEvB,0DAAuB;QAAvB,kFAAuB;QAKO,0DAAU;QAAV,gFAAU;QAMZ,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVrD,MAAM,mBAAmB;IAG9B,YAAoB,aAA6B,EAAU,MAAqB,EACvE,QAAyB;QADd,kBAAa,GAAb,aAAa,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAe;QACvE,aAAQ,GAAR,QAAQ,CAAiB;IAAI,CAAC;IAEvC,QAAQ;IACR,CAAC;IAED,OAAO,CAAC,MAAc;QACpB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACzD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QAC1D,CAAC,CAAC;IACJ,CAAC;;sFAbU,mBAAmB;iHAAnB,mBAAmB;QCXhC,yEAAuB;QACnB,yEAA8B;QAC1B,oEAAoG;QACpG,wEAAyD;QACrD,wEAA6B;QAAA,4EAA0E;QACnG,kEAA0B;QAAA,4DAAS;QAAA,4DAAK;QAC5C,wEAA6B;QAAA,4EAA0D;QAAlD,2IAAS,uBAAe,IAAC;QAC1D,kEAA2B;QAAA,4DAAS;QAAA,4DAAK;QAC7C,yEAA6B;QACzB,6EAG4B;QAC5B,oEAA8B;QAClC,4DAAS;QAAA,4DAAK;QAClB,4DAAK;QACT,4DAAM;QACN,2EAA2B;QACvB,0EAAwC;QACpC,wEAAoF;;QAChF,oEAA+B;QACnC,4DAAO;QAEP,wDACJ;QAAA,4DAAK;QACL,yEAA4C;QAAA,wDAAe;QAAA,4DAAI;QACnE,4DAAM;QACV,4DAAM;;QAzBO,0DAAgD;QAAhD,mLAAgD;QAAC,8FAAwB;QAErC,0DAAyC;QAAzC,wHAAyC;QAMtE,0DAAyC;QAAzC,wHAAyC;QACzC,+IAAwB;QAQ1B,0DAA6E;QAA7E,kMAA6E;QAInF,0DACJ;QADI,oHACJ;QAC4C,0DAAe;QAAf,gFAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrB2B;AAOxD;AAGmE;;;;;;;;;;;;;;;;ICRzF,0EAAqF;IACjF,mEAA8C;IAAC,uEACnD;IAAA,4DAAM;;ADaf,MAAM,qBAAqB;IAWhC,YAAmB,QAAyB,EAAU,KAAqB,EACjE,cAA8B,EAAU,cAA8B,EACtE,aAA6B,EAAU,MAAqB,EAC5D,MAAc,EAAU,YAA4B;QAH3C,aAAQ,GAAR,QAAQ,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QACjE,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QACtE,kBAAa,GAAb,aAAa,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAe;QAC5D,WAAM,GAAN,MAAM,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAgB;QAR9D,aAAQ,GAAc,EAAE,CAAC;QAEzB,mBAAc,GAAW,EAAE,CAAC;QAQxB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;QACnF,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,gBAAgB,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC;IAChE,CAAC;IAEH,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,CAAC,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACxC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC;QAEF,IAAI,CAAC,cAAc,GAAG;YACpB;gBACE,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,OAAO;gBACf,YAAY,EAAE,GAAG;gBACjB,iBAAiB,EAAE,CAAC;gBACpB,cAAc,EAAE,0EAAyB;gBACzC,OAAO,EAAE,KAAK;aACf;SACF;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;IACxC,CAAC;IAED,SAAS;QACP,MAAM,SAAS,GAAG,EAAE,CAAC;QACrB,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YACtC,SAAS,CAAC,IAAI,CAAC;gBACb,KAAK,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG;gBACjB,MAAM,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG;gBAClB,GAAG,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG;aAChB,CAAC;SACH;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC9E,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,KAAa;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;IAC5C,CAAC;IAED,cAAc,CAAC,IAAkB;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,KAAK,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACvE,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC1E;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;SACzC;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;IAC1C,CAAC;IAED,OAAO,CAAC,MAAc;QACpB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACzD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QAC1D,CAAC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,MAAc;QAE1B,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,mHAAyB,CAAC,CAAC;IACtE,CAAC;;0FAxFU,qBAAqB;mHAArB,qBAAqB;;;;;;QCrBlC,yEAAiB;QACb,yEAAmB;QACf,yEAAkB;QACd,oEACuC;QACvC,yEAAuB;QACnB,iHAEM;;QACN,sEAAK;QACD,yEAAQ;QAAA,oEAAS;QAAA,4DAAS;QAC1B,qEAAG;QAAA,wDAAmC;QAAA,4DAAI;QAC9C,4DAAM;QACN,uEAAK;QACD,0EAAQ;QAAA,gEAAI;QAAA,4DAAS;QACrB,qEAAG;QAAA,wDAAc;QAAA,4DAAI;QACzB,4DAAM;QACN,uEAAK;QACD,0EAAQ;QAAA,wEAAY;QAAA,4DAAS;QAC7B,qEAAG;QAAA,wDAA+B;;QAAA,4DAAI;QAC1C,4DAAM;QACN,uEAAK;QACD,0EAAQ;QAAA,yEAAa;QAAA,4DAAS;QAC9B,qEAAG;QAAA,wDAAwC;;QAAA,4DAAI;QACnD,4DAAM;QACV,4DAAM;QACN,0EAAyB;QACrB,0EAA8B;QAC1B,6EAA0D;QAAlD,8IAAS,uBAAe,IAAC;QAAyB,gEAAI;QAAA,4DAAS;QACvE,6EAAuD;QAA/C,8IAAS,cAAU,CAAC,CAAC,IAAC;QAAyB,mEAAO;QAAA,4DAAS;QACvE,8EAA+D;QAAvD,8IAAS,6BAAqB,IAAC;QAAwB,qEAAS;QAAA,4DAAS;QACrF,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EAAmB;QACf,kFAA0C;QACtC,2EAA6E;QAArC,yJAAa,0BAAsB,IAAC;QACxE,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,qEAAG;QAAA,wDAAuB;QAAA,4DAAI;QAC9B,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,qEAAG;QAAA,wDAAqB;QAAA,4DAAI;QAChC,4DAAM;QACN,2EAA8D;QAArC,yJAAa,0BAAsB,IAAC;QACzD,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,qEAAG;QAAA,wDAAoB;QAAA,4DAAI;QAC/B,4DAAM;QACN,2EAA2D;QAArC,yJAAa,0BAAsB,IAAC;QACtD,8EACsE;QAC1E,4DAAM;QACN,2EAA6D;QAArC,yJAAa,0BAAsB,IAAC;QACxD,sFAAwE;QAC5E,4DAAM;QACV,4DAAS;QACb,4DAAM;QACV,4DAAM;;QAtDW,0DAAgD;QAAhD,mLAAgD;QAAC,8FAAwB;QAGvD,0DAA+D;QAA/D,2LAA+D;QAK3E,0DAAmC;QAAnC,mHAAmC;QAInC,0DAAc;QAAd,+EAAc;QAId,0DAA+B;QAA/B,yJAA+B;QAI/B,0DAAwC;QAAxC,qKAAwC;QAe9C,2DAAkC;QAAlC,iHAAkC;QAEhC,0DAAuB;QAAvB,wFAAuB;QAEvB,0DAAqB;QAArB,sFAAqB;QAIrB,0DAAoB;QAApB,qFAAoB;QAGV,0DAA0B;QAA1B,uFAA0B;QAIlB,0DAA4B;QAA5B,yFAA4B;;;;;;;;;;;;;;;;;;;;;;;;;;;AChD3B;;;;;;;;;;;;ICA9B,0EAAqD;IACjD,yEAAQ;IAAA,wEAAa;IAAA,4DAAS;IAAC,oHACnC;IAAA,4DAAM;;;;IAPd,yEAAgC;IAC5B,yEAAmB;IACf,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACzB,4DAAM;IACN,yEAAmB;IACf,qHAEM;IACV,4DAAM;IACN,yEAAmB;IACf,yEAAkB;IACd,oEACuC;IACvC,yEAAuB;IACnB,uEAAK;IACD,0EAAQ;IAAA,qEAAS;IAAA,4DAAS;IAC1B,qEAAG;IAAA,wDAAmC;IAAA,4DAAI;IAC9C,4DAAM;IACN,uEAAK;IACD,0EAAQ;IAAA,gEAAI;IAAA,4DAAS;IACrB,qEAAG;IAAA,wDAAc;IAAA,4DAAI;IACzB,4DAAM;IACN,uEAAK;IACD,0EAAQ;IAAA,wEAAY;IAAA,4DAAS;IAC7B,qEAAG;IAAA,wDAA+B;;IAAA,4DAAI;IAC1C,4DAAM;IACN,uEAAK;IACD,0EAAQ;IAAA,yEAAa;IAAA,4DAAS;IAC9B,qEAAG;IAAA,wDAAwC;;IAAA,4DAAI;IACnD,4DAAM;IACV,4DAAM;IACN,0EAAyB;IACrB,6EAAqG;IAAA,wEAAY;IAAA,4DAAS;IAC9H,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEN,0EAAmB;IACf,8EAA8B;IAC1B,2EAAwC;IACpC,gFAAmE;IAA5B,+TAA2B;IAC9D,sEAAI;IAAA,uEAAW;IAAA,4DAAK;IACpB,gFAA8F;IAA/D,iWAAiC;IAA8B,4DAAW;IACzG,0EAAiB;IAAA,uEAAW;IAAA,4DAAK;IACjC,gFAA0F;IAA3D,+VAA+B;IAA4B,4DAAW;IACrG,0EAAiB;IAAA,qEAAS;IAAA,4DAAK;IAC/B,gFAAwF;IAAzD,8VAA8B;IAA2B,4DAAW;IACnG,0EAAiB;IAAA,8EAAkB;IAAA,4DAAK;IACxC,2EAAyB;IACrB,6EAAkB;IAAA,kEAAM;IAAA,4DAAQ;IAChC,6EAAmF;IAA5E,sVAAyB;IAAhC,4DAAmF;IACnF,6EAAkB;IAAA,qEAAS;IAAA,4DAAQ;IACnC,6EAAyF;IAAlF,yVAA4B;IAAnC,4DAAyF;IAC7F,4DAAM;IACV,4DAAO;IAEX,4DAAM;IACN,2EAA2B;IACvB,mFAAuD;IAC3D,4DAAM;IACV,4DAAS;IACb,4DAAM;IACV,4DAAM;;;;IAzDiC,0DAAoB;IAApB,2EAAoB;IAM1C,0DAAgD;IAAhD,sLAAgD;IAAC,iGAAwB;IAKnE,0DAAmC;IAAnC,yHAAmC;IAInC,0DAAc;IAAd,kFAAc;IAId,0DAA+B;IAA/B,4JAA+B;IAI/B,0DAAwC;IAAxC,wKAAwC;IAIvC,0DAA4B;IAA5B,gFAA4B;IAOnC,0DAAkC;IAAlC,oHAAkC;IAGA,0DAAiC;IAAjC,+FAAiC;IAEjC,0DAA+B;IAA/B,6FAA+B;IAE/B,0DAA8B;IAA9B,4FAA8B;IAIlD,0DAAyB;IAAzB,uFAAyB;IAEzB,0DAA4B;IAA5B,0FAA4B;IAMzB,0DAAiB;IAAjB,iFAAiB;;AD5C5C,MAAM,mBAAmB;IAU9B,YAAoB,cAA8B,EAAU,aAA6B,EAC/E,MAAqB;QADX,mBAAc,GAAd,cAAc,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAgB;QAC/E,WAAM,GAAN,MAAM,CAAe;QAC3B,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;IACvF,CAAC;IATgD,kBAAkB,CAAC,MAAW;QAC7E,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACvB,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IAOD,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAClE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC1D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;YACpD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC,CAAC;IACJ,CAAC;;sFA9BU,mBAAmB;iHAAnB,mBAAmB;;;;;;+JAAnB,8BAA0B;;QCdvC,iHA8DM;;QA9DY,4EAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEqBd,6EAAiE;IAC7D,uDACJ;IAAA,4DAAS;;;IAFiC,kFAAsB;IAC5D,0DACJ;IADI,6FACJ;;;IA+BZ,0EAAkD;IAC9C,iFAAqD;IACzD,4DAAM;;;IADe,0DAAiB;IAAjB,6EAAiB;;;;IAI1C,0EAA8D;IAC1D,iFAUuB;IANnB,sWAAoC;IAO5C,4DAAa;IACb,4DAAM;;;IAXE,0DAAsB;IAAtB,+EAAsB;;AD9CvB,MAAM,mBAAmB;IAO9B,YAAoB,aAA6B;QAA7B,kBAAa,GAAb,aAAa,CAAgB;QAFjD,eAAU,GAAG,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;QAG1F,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;IACvD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClE,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC/B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;QACxC,CAAC,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;QACvD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;QACxC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;;sFAhCU,mBAAmB;iHAAnB,mBAAmB;QCfhC,yEAA8B;QAC1B,qEAAI;QAAA,uDAA+C;QAAA,4DAAK;QAC5D,4DAAM;QAEN,yEAA4B;QACxB,6EAAuF;QAA9C,+IAAY,iBAAa,IAAC;QAC/D,yEAAyB;QACrB,2EAAmC;QAAA,qEAAU;QAAA,4DAAQ;QACrD,2EACoC;QAAhC,kMAA+B;QADnC,4DACoC;QACxC,4DAAM;QAEN,0EAAyB;QACrB,4EAAmC;QAAA,oEAAQ;QAAA,4DAAQ;QACnD,4EACoC;QAAhC,mMAA+B;QADnC,4DACoC;QACxC,4DAAM;QAEN,0EAAyB;QACrB,4EAAmC;QAAA,kEAAM;QAAA,4DAAQ;QACjD,6EAAqG;QAA1D,oMAA+B;QACtE,wHAES;QACb,4DAAS;QACb,4DAAM;QAEN,8EAAmD;QAAA,yEAAa;QAAA,4DAAS;QACzE,8EAAyE;QAAjE,4IAAS,kBAAc,IAAC;QAAyC,yEAAa;QAAA,4DAAS;QAC/F,2EAAiB;QACb,2EAAiC;QAC7B,8EAMqC;QAFjC,4IAAS,iBAAa,IAAC;QAEU,uEAAW;QAAA,4DAAS;QAEzD,8EAMqC;QAFjC,4IAAS,iBAAa,IAAC;QAEU,0EAAc;QAAA,4DAAS;QAChE,4DAAM;QACV,4DAAM;QAGV,4DAAO;QACX,4DAAM;QAEN,2EAAiB;QACb,kHAEM;QACV,4DAAM;QAEN,kHAaM;;QAvEE,0DAA+C;QAA/C,wJAA+C;QAQvC,0DAA+B;QAA/B,0FAA+B;QAM/B,0DAA+B;QAA/B,0FAA+B;QAKQ,0DAA+B;QAA/B,0FAA+B;QAC3C,0DAAa;QAAb,mFAAa;QAgBpC,0DAAgC;QAAhC,2FAAgC;QAQhC,0DAAgC;QAAhC,2FAAgC;QASxB,0DAAU;QAAV,gFAAU;QAKM,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IErDpD,sEAAmE;IAC/D,qHACJ;IAAA,4DAAM;;;IAekB,2EAC4C;IACxC,qEACJ;IAAA,4DAAO;;;IACP,2EAC4C;IACxC,uDACJ;;IAAA,4DAAO;;;IADH,0DACJ;IADI,uKACJ;;;IAjBpB,qEAAoE;IAChE,sEAAK;IACD,2EAAiC;IAC7B,qEACqC;IACzC,4DAAO;IACP,0EAAuB;IACnB,0EAAoB;IAChB,4EAA0B;IACtB,2EAA4B;IAAA,uDAAiC;;IAAA,4DAAO;IACpE,kIAGO;IACP,kIAGO;IACX,4DAAQ;IACZ,4DAAM;IACN,qEAAG;IAAA,wDAAmB;IAAA,4DAAI;IAC9B,4DAAM;IACV,4DAAM;IACV,4DAAK;;;;IApBmC,0DAAuD;IAAvD,yLAAuD;IAC/E,qGAAgC;IAKA,0DAAiC;IAAjC,wJAAiC;IAClC,0DACc;IADd,uIACc;IAGb,0DACa;IADb,sIACa;IAK9C,0DAAmB;IAAnB,mFAAmB;;;IAvBtC,yEAEiB;IACb,wHAuBK;;IACT,4DAAK;;;IAxBuB,0DAA0C;IAA1C,0KAA0C;;;IAuCtD,mEAAqD;;ADxCtE,MAAM,uBAAuB;IAOlC,YAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAFjD,YAAO,GAAG,KAAK,CAAC;IAEqC,CAAC;IAEtD,QAAQ;IACR,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC;aAClE,IAAI,CAAC,GAAG,EAAE;YACT,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAC3B,CAAC,CAAC;aACD,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;IACvC,CAAC;;8FAnBU,uBAAuB;qHAAvB,uBAAuB;;;;;;QCZpC,yEAAkB;QACd,4EAIC;QACG,mHAEM;;QAEN,iHA2BK;;QACT,4DAAM;QAEN,yEAAyB;QACrB,6EAA0E;QAA9C,mJAAY,iBAAa,IAAC;QAClD,0EAAyB;QACrB,4EAMyC;QAHrC,oMAA4B;QAHhC,4DAMyC;QACzC,2EAAgC;QAC5B,8EAAyF;QAAA,iEACrF;QAAA,kHAAqD;QACzD,4DAAS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;;;;;QAtDE,0DAAmC;QAAnC,uFAAmC;QAE7B,0DAA2D;QAA3D,wNAA2D;QAK5D,0DAAwD;QAAxD,+KAAwD;QAmCjD,0DAA4B;QAA5B,uFAA4B;QAKpB,0DAA0C;QAA1C,+FAA0C;QAC1C,0DAAa;QAAb,6EAAa;;;;;;;;;;;;;;;;;;;;;;;;AClDM;AACY;AAGrB;;;;;;;ICF9B,0EAA4D;IACxD,2EAA0B;IAAA,4EAAiB;IAAA,4DAAO;IACtD,4DAAM;;;;IALV,yEAAmE;IAC/D,qEAAgH;IAEhH,uHAEM;IAEN,0EAAyB;IACrB,6EAKC;IAHG,+XAA6B;IAGhC,+DAAI;IAAA,4DAAS;IACd,6EAIC;IAFG,iYAA+B;IAElC,mEAA2B;IAAA,4DAAS;IACzC,4DAAM;IACV,4DAAM;;;IAnBqE,0DAAwC;IAAxC,+FAAwC;IAA1G,qJAAmB;IAAC,wFAAmB;IAET,0DAAuB;IAAvB,sFAAuB;IAMlD,0DAA8C;IAA9C,6GAA8C;IAM9C,0DAAyB;IAAzB,qFAAyB;;;IA6CzB,yEAA4C;IAAA,uDAAiD;;IAAA,4DAAK;;;IAAtD,0DAAiD;IAAjD,4OAAiD;;;IAFjG,qEAAwC;IACpC,qEAAI;IAAA,yEAAQ;IAAA,uDAAsB;IAAA,4DAAS;IAAA,4DAAK;IAChD,4HAAkG;IACtG,4DAAK;;;;IAFW,0DAAsB;IAAtB,yIAAsB;IAC7B,0DAA8B;IAA9B,iGAA8B;;;;;IAf/C,0EAAkF;IAE9E,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACrB,oEAAG;IAAA,uDAA2C;IAAA,4DAAI;IAElD,4EAAqB;IACjB,wEAAO;IACP,qEAAI;IACA,yEAAgB;IAAA,+DAAI;IAAA,4DAAK;IACzB,sEAAI;IAAA,gEAAI;IAAA,4DAAK;IACjB,4DAAK;IACL,4DAAQ;IACR,yEAAO;IACP,wHAGK;IACL,4DAAQ;IACZ,4DAAQ;IAER,uEAAK;IACD,uEAAK;IACD,6EACA;IAAA,2EAAsB;IAClB,sEAAoG;IACxG,4DAAM;IACV,4DAAM;IACN,8EAC2F;IAAnF,sSAAS,4BAAoB,IAAC;IAClC,uEAAkC;IAAC,wEACvC;IAAA,4DAAS;IACT,8EAC0E;IAAlE,sSAAS,4BAAoB,IAAC;IAClC,uEAA+B;IAAC,wEACpC;IAAA,4DAAS;IACT,8EAC4E;IAApE,sSAAS,6BAAqB,IAAC;IACnC,uEAAiC;IAAC,wEACtC;IAAA,4DAAS;IACb,4DAAM;IAEV,4DAAM;;;IAtCC,0DAA2C;IAA3C,4LAA2C;IAUrB,0DAAiB;IAAjB,0FAAiB;IAWe,0DAAgD;IAAhD,0KAAgD;IAI9D,0DAAmD;IAAnD,mHAAmD;IAInD,0DAAkC;IAAlC,kGAAkC;IAIjC,0DAAmC;IAAnC,mGAAmC;;;ADnEhF,MAAM,oBAAoB;IAO/B,YAAoB,cAA8B,EAAU,aAA6B;QAArE,mBAAc,GAAd,cAAc,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAgB;QAJzF,wBAAmB,GAAG,KAAK,CAAC;QAC5B,YAAO,GAAG,4EAAkB,CAAC;QAI3B,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;IACrF,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,YAAY,CAAC,CAAM;QACjB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,YAAY,CAAC,KAAY;QACvB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACvD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;YAC/B,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBAC7B,IAAI,CAAC,CAAC,MAAM;oBAAE,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;gBAC/B,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE;oBAAE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;YACzC,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,OAAe;QACzB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACrD,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC;QACxE,CAAC,CAAC;IACJ,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,yDAAY,CAAC;YAC/B,GAAG,EAAE,IAAI,CAAC,OAAO,GAAG,iBAAiB;YACrC,SAAS,EAAE,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK;YACtC,OAAO,EAAE,IAAI;YACb,eAAe,EAAE,CAAC,OAAO,CAAC;YAC1B,iBAAiB,EAAE,IAAI;YACvB,UAAU,EAAE,KAAK;YACjB,WAAW,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI;SAC9B,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,iBAAiB,GAAG,CAAC,IAAI,EAAE,EAAE;YACzC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE;YAChE,IAAI,QAAQ,EAAE;gBACZ,MAAM,KAAK,GAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAC1C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9B,IAAI,KAAK,CAAC,MAAM,EAAE;oBAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;oBAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;oBACjC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC/C;aACH;QACH,CAAC;IACH,CAAC;;wFA/DU,oBAAoB;kHAApB,oBAAoB;QCfjC,yEAAiB;QACb,gHAoBM;QACV,4DAAM;QAEN,yEAAsB;QAElB,yEAAsB;QAElB,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QAEnB,yEAI6D;QAFxD,qJAAY,wBAAoB,IAAC;QAGjC,kEAAkC;QACnC,6EACJ;QAAA,4DAAM;QAEN,qEACA;QAAA,uEAAmE;QAAA,iEAAK;QAExE,oEACA;QAAA,uEAAyD;QAC7D,4DAAM;QAEN,mHAyCM;QAEV,4DAAM;;QAxF+C,0DAAgB;QAAhB,sFAAgB;QA8BxD,0DAAiD;QAAjD,mKAAiD;QASrB,0DAAqB;QAArB,kFAAqB;QAGrB,0DAAqB;QAArB,kFAAqB;QAGP,0DAA6B;QAA7B,6JAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IE7BpF,0EAAgD;IAC5C,qEAAI;IAAA,sEAAW;IAAA,4DAAK;IACxB,4DAAM;;;IAmBU,sEAAoC;IAChC,qEAGwC;IACxC,yEAAQ;IAAA,uDAAyC;;IAAA,4DAAS;IAC9D,4DAAM;;;IAHE,0DAA0D;IAA1D,4LAA0D;IAC1D,wGAAmC;IAC/B,0DAAyC;IAAzC,8JAAyC;;;IAErD,sEAAoC;IAChC,qEAGqC;IACrC,yEAAQ;IAAA,uDAAsC;;IAAA,4DAAS;IAC3D,4DAAM;;;IAHE,0DAAuD;IAAvD,yLAAuD;IACvD,qGAAgC;IAC5B,0DAAsC;IAAtC,2JAAsC;;;;;IAlBtD,yEAGwE;IACxE,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IACA,2HAMM;IACN,2HAMM;IACV,4DAAK;IACL,qEAAI;IAAA,uDAAiC;;IAAA,4DAAK;IAC1C,qEAAI;IACA,8EAAsG;IAA9F,6JAAS,wBAAwB,IAAC;IAA4D,kEAAM;IAAA,4DAAS;IACzH,4DAAK;IACL,4DAAK;;;;IAxBL,uMAE6C;IAHzC,kFAAkB;IAIlB,0DAAmB;IAAnB,mFAAmB;IAEb,0DAA4B;IAA5B,+FAA4B;IAO5B,0DAA4B;IAA5B,+FAA4B;IAQlC,0DAAiC;IAAjC,wJAAiC;;;IAhCjD,0EAA8C;IAC1C,4EAAyD;IACrD,wEAAO;IACH,qEAAI;IACA,yEAAuB;IAAA,kEAAO;IAAA,4DAAK;IACnC,yEAAuB;IAAA,oEAAS;IAAA,4DAAK;IACrC,yEAAuB;IAAA,0EAAe;IAAA,4DAAK;IAC3C,qEAA4B;IAChC,4DAAK;IACT,4DAAQ;IACR,yEAAO;IACH,uHAyBK;IACT,4DAAQ;IAEZ,4DAAQ;IACZ,4DAAM;;;IA7BiD,2DAAW;IAAX,oFAAW;;;;IA+BlE,0EAA0E;IACtE,iFAUuB;IANnB,uWAAoC;IAO5C,4DAAa;IACb,4DAAM;;;IAXE,0DAAsB;IAAtB,+EAAsB;;ADtDvB,MAAM,iBAAiB;IAQ5B,YAAoB,cAA8B,EAAU,cAA8B;QAAtE,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAP1F,aAAQ,GAAc,EAAE,CAAC;QAEzB,cAAS,GAAG,QAAQ,CAAC;QACrB,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,CAAC,CAAC;QACb,YAAO,GAAG,KAAK,CAAC;IAE8E,CAAC;IAE/F,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACnG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;YAChC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;YACtC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,wBAAwB,EAAE,uBAAuB,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChG,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;oBACnD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACrE,CAAC,CAAC;aACH;QACH,CAAC,CAAC;IAEJ,CAAC;IAED,WAAW,CAAC,KAAU;QACpB,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,IAAI,EAAE;YAClC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;YAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IACH,CAAC;;kFAvCU,iBAAiB;+GAAjB,iBAAiB;QCX9B,yEAAyB;QACrB,yEAAwC;QACpC,4EAC6B;QADqB,yLAAuB,iFAC5D,kBAAc,IAD8C;QAErE,kEAA8B;QAAC,mEACnC;QAAA,4DAAS;QACT,4EAC6B;QADoB,yLAAuB,iFAC3D,kBAAc,IAD6C;QAEpE,kEAAmC;QAAC,kEACxC;QAAA,4DAAS;QACT,4EAC6B;QADqB,yLAAuB,iFAC5D,kBAAc,IAD8C;QAErE,kEAAiC;QAAC,oEACtC;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAM;QAEN,+GAEM;QAEN,gHAwCM;QAEN,+GAaM;;QA1EoD,0DAAuB;QAAvB,kFAAuB;QAIxB,0DAAuB;QAAvB,kFAAuB;QAItB,0DAAuB;QAAvB,kFAAuB;QAO/D,0DAA4B;QAA5B,2HAA4B;QAI5B,0DAA0B;QAA1B,yHAA0B;QA0CA,0DAA4B;QAA5B,gGAA4B;;;;;;;;;;;;;;;;;;;;;;;AC/DD;AACH;;;;;;;AAe7D,MAAM,yBAAyB;IAIpC,YACS,UAAsB,EACrB,aAA6B,EAAU,EAAe,EAAU,YAA0B,EAC1F,MAAqB;QAFtB,eAAU,GAAV,UAAU,CAAY;QACrB,kBAAa,GAAb,aAAa,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAC1F,WAAM,GAAN,MAAM,CAAe;QALtB,wBAAmB,GAAG,IAAI,uDAAY,EAAE,CAAC;QAOlD,aAAQ,GAAW,EAAE,CAAC;QAEtB,YAAO,GAAU,EAAE,CAAC;IAJgB,CAAC;IAMrC,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjD,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,OAAO,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAClC,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;SAC1B,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,SAAS,GAAa,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC3D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gDAAgD,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IACL,CAAC;;kGA9BU,yBAAyB;uHAAzB,yBAAyB;QChBtC,0EAAgE;QAA9B,qJAAY,mBAAe,IAAC;QAC1D,yEAA0B;QACtB,sEAAK;QACD,yEAAQ;QAAA,iEAAM;QAAA,4DAAS;QAAC,wEAAO;QAAC,2FAA+B;QAAA,4DAAQ;QAC3E,4DAAM;QACN,4EAA4G;QAA5B,iJAAS,qBAAiB,IAAC;QACvG,uEAAsE;QAA5B,4IAAS,qBAAiB,IAAC;QAAC,4DAAI;QAC9E,4DAAS;QACb,4DAAM;QACN,yEAAwB;QACpB,0EAAiB;QACb,0EAAuB;QACnB,0EAAwB;QACpB,4EAAkB;QAAA,mEAAO;QAAA,4DAAQ;QACjC,+EACuF;QAAC;QAAA,4DAAW;QACvG,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,uEAAK;QACD,8EAA0E;QAA5B,kJAAS,qBAAiB,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACzF,8EAA8F;QAAA,kEAAM;QAAA,4DAAS;QACjH,4DAAM;QACV,4DAAO;;QAxBD,wFAA2B;QAewB,2DAAiD;QAAjD,8GAAiD;QAOtC,0DAAiC;QAAjC,8FAAiC;;;;;;;;;;;;;;;;;;;;;ACd9F,MAAM,sBAAsB;IAOjC,YAAmB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE9C,QAAQ;IACR,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;;4FApBU,sBAAsB;oHAAtB,sBAAsB;QCRnC,yEAA0B;QACtB,wEAAkC;QAAA,uDAAS;QAAA,4DAAK;QAClD,4DAAM;QACN,yEAAwB;QACtB,oEAAG;QAAA,uDAAW;QAAA,4DAAI;QACpB,4DAAM;QACN,yEAA0B;QACxB,4EAAkE;QAApB,8IAAS,aAAS,IAAC;QAAC,uDAAa;QAAA,4DAAS;QACxF,4EAAiE;QAApB,8IAAS,aAAS,IAAC;QAAC,wDAAiB;QAAA,4DAAS;QAC7F,4DAAM;;QAR8B,0DAAS;QAAT,0EAAS;QAGxC,0DAAW;QAAX,4EAAW;QAGoD,0DAAa;QAAb,8EAAa;QACd,0DAAiB;QAAjB,kFAAiB;;;;;;;;;;;;;;;;;;;;;ACRf;;;;;;;ICQ/D,0EAAmD;IAC/C,4EAMC;IAFG,qTAAuC;IAJ3C,4DAMC;IACD,wEAAO;IAAA,uDAAa;IAAA,4DAAQ;IAChC,4DAAM;;;;IANE,0DAAwB;IAAxB,oFAAwB;IAKrB,0DAAa;IAAb,6EAAa;;ADPzB,MAAM,mBAAmB;IAK9B,YAAmB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAJhC,wBAAmB,GAAG,IAAI,uDAAY,EAAE,CAAC;IAIL,CAAC;IAE9C,QAAQ;IACR,CAAC;IAED,WAAW;QACT,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;;sFAbU,mBAAmB;iHAAnB,mBAAmB;QCThC,yEAA0B;QACtB,wEAAkC;QAAA,uDAAgC;QAAA,4DAAK;QACvE,4EAA8F;QAA5B,2IAAS,qBAAiB,IAAC;QAC3F,0EAAyB;QAAA,iEAAO;QAAA,4DAAO;QACzC,4DAAS;QACX,4DAAM;QACN,yEAAwB;QACtB,6EAAyC;QACrC,+GASM;QACV,4DAAO;QACT,4DAAM;QACN,0EAA0B;QACxB,6EAA0E;QAA5B,4IAAS,qBAAiB,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACzF,8EAAsE;QAAxB,4IAAS,iBAAa,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACvF,4DAAM;;QAtB8B,0DAAgC;QAAhC,0GAAgC;QAOrB,0DAAQ;QAAR,8EAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEOzC,wEAA0D;IACtD,wEAAkE;IAAA,gEAAK;IAAA,4DAAI;IAC/E,4DAAK;;;;IAZT,wEAA0D;IACtD,wEAAqB;IACjB,uEAAqE;IAAA,kEAAO;IAAA,4DAAI;IACpF,4DAAK;IACL,wEAAqB;IACjB,wEAAkE;IAAA,gEAAK;IAAA,4DAAI;IAC/E,4DAAK;IACL,wEAAqB;IACjB,wEAAqE;IAAA,mEAAQ;IAAA,4DAAI;IACrF,4DAAK;IACL,wHAEK;IACT,qEAAe;;IAHN,2DAAkC;IAAlC,6IAAkC;;;;IAY3C,0EAA8C;IAC1C,wEAAmD;IAAA,uEAAY;IAAA,4DAAI;IACnE,qEAAoC;IACpC,wEAA6C;IAApB,gTAAkB;IAAE,iEAAM;IAAA,4DAAI;IAC3D,4DAAM;;;IAPV,0EAAqF;IACjF,qEAA4E;IAC5E,wEAA+E;IAAA,uDAAqD;;IAAA,4DAAI;IACxI,gHAIM;IACV,4DAAM;;;IAPG,0DAA8C;IAA9C,gLAA8C;IAAC,4FAAuB;IACI,0DAAqD;IAArD,sLAAqD;;;;IAQxI,+EACuB;IADsF,mTAAoB;IAE7H,4EAK2B;IAHvB,sVAA4B;IAFhC,4DAK2B;IAC3B,4EAK2B;IAHvB,sVAA4B;IAFhC,4DAK2B;IAC3B,6EAA2D;IAAA,gEAAK;IAAA,4DAAS;IAC7E,4DAAO;;;IAXC,0DAA4B;IAA5B,0FAA4B;IAM5B,0DAA4B;IAA5B,0FAA4B;;ADhCrC,MAAM,YAAY;IAGvB,YAAmB,cAA8B,EAAU,MAAc,EAC/D,MAAqB;QADZ,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC/D,WAAM,GAAN,MAAM,CAAe;QAH/B,UAAK,GAAQ,EAAE;IAGoB,CAAC;IAEpC,QAAQ;IACR,CAAC;IAED,KAAK;QACH,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACzD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACxC,CAAC,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC;IAChC,CAAC;;wEAlBU,YAAY;0GAAZ,YAAY;QCZzB,yEAAmE;QAC/D,yEAAuB;QACnB,uEAAiE;QAAA,qEAAU;QAAA,4DAAI;QAE/E,wEAA+B;QAC3B,2HAae;;QACf,wEAAqB;QACjB,uEAAmE;QAAA,iEAAM;QAAA,4DAAI;QACjF,4DAAK;QACT,4DAAK;QAEL,0GAQM;;QAEN,4GAeO;;QACX,4DAAM;QAEV,4DAAM;;QA/CqB,0DAAyC;QAAzC,kKAAyC;QAmBrC,0DAA4C;QAA5C,mKAA4C;QAU5D,0DAAoD;QAApD,4KAAoD;;;;;;;;;;;;;;;;;;;;;;;;;AClCY;AAGgC;;;;;;;;;;IC8BnG,qEAA2C;IACvC,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,oFACJ;;;IAJR,0EAAqD;IACjD,yEAAwB;IACpB,mHAEK;IACT,4DAAK;IACT,4DAAM;;;IAJwB,0DAAmB;IAAnB,4FAAmB;;ADtB9C,MAAM,iBAAiB;IAM5B,YAAoB,cAA8B,EAAU,MAAqB,EACvE,EAAe,EAAU,MAAc;QAD7B,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAe;QACvE,OAAE,GAAF,EAAE,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QANvC,mBAAc,GAAG,IAAI,uDAAY,EAAE,CAAC;QAG9C,qBAAgB,GAAa,EAAE,CAAC;IAGqB,CAAC;IAEtD,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,GAAE,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,eAAe;QACb,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,MAAM,EAAE,CAAC,MAAM,CAAC;YAChB,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACnC,OAAO,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAClC,WAAW,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACtC,IAAI,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC/B,OAAO,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAClC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB;oBACjC,gEAAoB,CAAC,CAAC,CAAC,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YACpD,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;SAC3E,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,OAAe;QACzB,OAAO,CAAC,OAAwB,EAAE,EAAE;;YAClC,OAAO,QAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,OAAK,aAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,0CAAE,QAAQ,CAAC,OAAO,EAAE,KAAK;gBAChE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,UAAU,EAAE,IAAI,EAAC;QAC/B,CAAC;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACzE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACxC,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;;kFA9CU,iBAAiB;+GAAjB,iBAAiB;QCX9B,0EAAkG;QAAjE,uKAAkC,cAAU,IAAC;QAC1E,wEAAqC;QAAA,kEAAO;QAAA,4DAAK;QACjD,gEAAI;QAEJ,yEAAkB;QACd,2EAAmC;QAAA,mEAAQ;QAAA,4DAAQ;QACnD,2EAAgC;QAC5B,sEAAmF;QAAC,iEACxF;QAAA,4DAAQ;QACR,4EAAgC;QAC5B,uEAA0F;QAAC,oEAC/F;QAAA,4DAAQ;QACZ,4DAAM;QAEN,gFAC0C;QAC1C,gFAC0C;QAC1C,gFACmE;QACnE,gFACsC;QACtC,gFACyC;QACzC,gFAEiB;QACjB,gFAEyC;QAEzC,gHAMM;QAEN,2EAAoC;QAChC,8EAAoF;QAAA,oEAAQ;QAAA,4DAAS;QACrG,8EAAsE;QAAjC,0IAAS,YAAQ,IAAC;QAAe,kEAAM;QAAA,4DAAS;QACzF,4DAAM;QACV,4DAAO;;QA3CD,uFAA0B;QAcZ,2DAAiD;QAAjD,8GAAiD;QAEjD,0DAAgD;QAAhD,6GAAgD;QAEhD,0DAAoD;QAApD,iHAAoD;QAEpD,0DAA6C;QAA7C,0GAA6C;QAE7C,0DAAgD;QAAhD,6GAAgD;QAEhD,0DAAiD;QAAjD,8GAAiD;QAGjD,0DAAwD;QAAxD,qHAAwD;QAItD,0DAAiC;QAAjC,iGAAiC;QASvC,0DAAgC;QAAhC,6FAAgC;;;;;;;;;;;;;;;;;ACxChD,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,6BAA6B;IACrC,MAAM,EAAE,8BAA8B;CACvC,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACjBvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/_directives/has-role.directive.ts","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_guards/admin.guard.ts","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/_interceptors/loading.interceptor.ts","./src/app/_models/pagination.ts","./src/app/_models/userParams.ts","./src/app/_modules/shared.module.ts","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_services/account.service.ts","./src/app/_services/admin.service.ts","./src/app/_services/busy.service.ts","./src/app/_services/confirm.service.ts","./src/app/_services/members.service.ts","./src/app/_services/message.service.ts","./src/app/_services/paginationHelper.ts","./src/app/_services/presence.service.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/user-block-managment/user-block-managment.component.ts","./src/app/admin/user-block-managment/user-block-managment.component.html","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/modals/complaint-message/complaint-message.component.ts","./src/app/modals/complaint-message/complaint-message.component.html","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { User } from '../_models/user';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Directive({\r\n  selector: '[appHasRole]'\r\n})\r\nexport class HasRoleDirective implements OnInit {\r\n  @Input() appHasRole: string[];\r\n  user: User;\r\n\r\n  constructor(private viewContainerRef: ViewContainerRef, \r\n    private templateRef: TemplateRef<any>, \r\n    private accountService: AccountService) {\r\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\r\n        this.user = user;\r\n      })\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    // clear view if no roles\r\n    if (!this.user?.roles || this.user == null) {\r\n      this.viewContainerRef.clear();\r\n      return;\r\n    }\r\n\r\n    if (this.user?.roles.some(r  => this.appHasRole.includes(r))) {\r\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n    } else {\r\n      this.viewContainerRef.clear();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-date-input',\r\n  templateUrl: './date-input.component.html',\r\n  styleUrls: ['./date-input.component.css']\r\n})\r\nexport class DateInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() maxDate: Date;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(@Self() public ngControl: NgControl) { \r\n    this.ngControl.valueAccessor = this;\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red',\r\n      dateInputFormat: 'DD MMMM YYYY'\r\n    }\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n}\r\n","<div class=\"mb-3\">\r\n    <input \r\n        type=\"text\"\r\n        [class.is-invalid]='ngControl.touched && ngControl.invalid'\r\n        class='form-control'\r\n        [formControl]='ngControl.control'\r\n        placeholder=\"{{label}}\"\r\n        bsDatepicker\r\n        [bsConfig]='bsConfig'\r\n        [maxDate]='maxDate'\r\n    >\r\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">{{label}} is required</div>\r\n</div>\r\n","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  templateUrl: './text-input.component.html',\r\n  styleUrls: ['./text-input.component.css']\r\n})\r\nexport class TextInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() type = 'text';\r\n\r\n  constructor(@Self() public ngControl: NgControl) { \r\n    this.ngControl.valueAccessor = this;\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n  \r\n}\r\n","<div class=\"mb-3\">\r\n    <input \r\n        [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n        type={{type}}\r\n        class=\"form-control\" \r\n        [formControl]=\"ngControl.control\"\r\n        placeholder={{label}}>\r\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">Please enter a {{label}}</div>\r\n    <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\r\n        {{label}} must be at least {{ngControl.control.errors.minlength['requiredLength']}}\r\n    </div>\r\n    <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">\r\n        {{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}}\r\n    </div>\r\n    <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">\r\n        Passwords do not match\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(private accountService: AccountService, private toastr: ToastrService) { }\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map(user => {\r\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\r\n          return true;\r\n        }\r\n        this.toastr.error('You cannot enter this area');\r\n      })\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private accountService: AccountService, private toastr: ToastrService) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map(user => {\r\n        if (user) return true;\r\n        this.toastr.error('You shall not pass!')\r\n      })\r\n    )\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\r\n\r\n  constructor(private confirmService: ConfirmService) {}\r\n\r\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\r\n    if (component.editForm.dirty) {\r\n      return this.confirmService.confirm()\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private router: Router, private toastr: ToastrService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError(error => {\r\n        if (error) {\r\n          switch (error.status) {\r\n            case 400:\r\n              if (error.error.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in error.error.errors) {\r\n                  if (error.error.errors[key]) {\r\n                    modalStateErrors.push(error.error.errors[key])\r\n                  }\r\n                }\r\n                throw modalStateErrors.flat();\r\n              } else if (typeof(error.error) === 'object') {\r\n                this.toastr.error(error.statusText, error.status);\r\n              } else {\r\n                this.toastr.error(error.error, error.status);\r\n              }\r\n              break;\r\n            case 401:\r\n              this.toastr.error('wrong login or password. Maybe you was blocked by admin');\r\n              break;\r\n            case 404:\r\n              this.router.navigateByUrl('/not-found');\r\n              break;\r\n            case 500:\r\n              const navigationExtras: NavigationExtras = {state: {error: error.error}}\r\n              this.router.navigateByUrl('/server-error', navigationExtras);\r\n              break;\r\n            default:\r\n              this.toastr.error('Something unexpected went wrong');\r\n              console.log(error);\r\n              break;\r\n          }\r\n        }\r\n        return throwError(error);\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { User } from '../_models/user';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private accountService: AccountService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    let currentUser: User;\r\n\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\r\n    if (currentUser) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`\r\n        }\r\n      })\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BusyService } from '../_services/busy.service';\r\nimport { delay, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private busyService: BusyService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    this.busyService.busy();\r\n    return next.handle(request).pipe(\r\n      finalize(() => {\r\n        this.busyService.idle();\r\n      })\r\n    )\r\n  }\r\n}\r\n","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    result: T;\r\n    pagination: Pagination;\r\n}","import { User } from './user';\r\n\r\nexport class UserParams {\r\n    gender: string;\r\n    minAge = 18;\r\n    maxAge = 99;\r\n    pageNumber = 1;\r\n    pageSize = 24;\r\n    orderBy = 'lastActive';\r\n\r\n    constructor(user: User) {\r\n        this.gender = user.gender === 'female' ? 'male' : 'female';\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport {NgxGalleryModule} from '@kolkov/ngx-gallery';\r\nimport {FileUploadModule} from 'ng2-file-upload';\r\nimport {BsDatepickerModule} from 'ngx-bootstrap/datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-right'\r\n    }),\r\n    TabsModule.forRoot(),\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    TimeagoModule.forRoot(),\r\n    ModalModule.forRoot()\r\n  ],\r\n  exports: [\r\n    BsDropdownModule,\r\n    ToastrModule,\r\n    TabsModule,\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule,\r\n    PaginationModule,\r\n    ButtonsModule,\r\n    TimeagoModule,\r\n    ModalModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Member } from '../_models/member';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member> {\r\n\r\n    constructor(private memberService: MembersService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n        return this.memberService.getMember(route.paramMap.get('username'));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport { User } from '../_models/user';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PresenceService } from './presence.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  baseUrl = environment.apiUrl;\r\n  private currentUserSource = new ReplaySubject<User>(1);\r\n  currentUser$ = this.currentUserSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private presence: PresenceService, private toastr: ToastrService) { }\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\r\n      map((response: User) => {\r\n        const user = response;\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          if(user.isBlocked){\r\n            this.logout();\r\n          }\r\n          else{\r\n          this.presence.createHubConnection(user);\r\n          this.toastr.success('Welcome, ' + user.username);\r\n        }\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  register(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\r\n      map((user: User) => {\r\n        if (user) {\r\n         this.setCurrentUser(user);\r\n         this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  setCurrentUser(user: User) {\r\n    user.roles = [];\r\n    const roles = this.getDecodedToken(user.token).role;\r\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\r\n    \r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.currentUserSource.next(user);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    this.currentUserSource.next(null);\r\n    this.presence.stopHubConnection();\r\n  }\r\n\r\n  getDecodedToken(token) {\r\n    return JSON.parse(atob(token.split('.')[1]));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Photo } from '../_models/photo';\r\nimport { User } from '../_models/user';\r\nimport { Сomplaints } from '../_models/complaints';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsersWithRoles() {\r\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\r\n  }\r\n\r\n  getСomplaints() {\r\n    return this.http.get<Partial<Сomplaints[]>>(this.baseUrl + 'Сomplaints');\r\n  }\r\n\r\n  updateUserRoles(username: string, roles: string[]) {\r\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\r\n  }\r\n\r\n  getPhotosForApproval() {\r\n    return this.http.get<Photo[]>(this.baseUrl + 'admin/photos-to-moderate');\r\n  }\r\n\r\n  approvePhoto(photoId: number) {\r\n    return this.http.post(this.baseUrl + 'admin/approve-photo/' + photoId, {});\r\n  }\r\n\r\n  rejectPhoto(photoId: number) {\r\n    return this.http.post(this.baseUrl + 'admin/reject-photo/' + photoId, {});\r\n  }\r\n\r\n  blockUser(username: string){\r\n    return this.http.post(this.baseUrl + 'users/block-user/'+ username, {})\r\n  }\r\n\r\n  unblockUser(username: string){\r\n    return this.http.post(this.baseUrl + 'users/unblock-user/'+ username, {})\r\n  }\r\n\r\n  processed(userId: number){\r\n    return this.http.post(this.baseUrl + 'Сomplaints/set-processed/'+ userId, {})\r\n  }\r\n\r\n   \r\n}","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusyService {\r\n  busyRequestCount = 0;\r\n\r\n  constructor(private spinnerService: NgxSpinnerService) { }\r\n\r\n  busy() {\r\n    this.busyRequestCount++;\r\n    this.spinnerService.show(undefined, {\r\n      type: 'line-scale-party',\r\n      bdColor: 'rgba(255,255,255,0)',\r\n      color: '#333333'\r\n    });\r\n  }\r\n\r\n  idle() {\r\n    this.busyRequestCount--;\r\n    if (this.busyRequestCount <= 0) {\r\n      this.busyRequestCount = 0;\r\n      this.spinnerService.hide();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmService {\r\n  bsModelRef: BsModalRef;\r\n\r\n  constructor(private modalService: BsModalService) { }\r\n\r\n  confirm(title = 'Confirmation', \r\n    message = 'Are you sure you want to do this?', \r\n    btnOkText = 'Ok', \r\n    btnCancelText = 'Cancel'): Observable<boolean> {\r\n      const config = {\r\n        initialState: {\r\n          title, \r\n          message,\r\n          btnOkText,\r\n          btnCancelText\r\n        }\r\n      }\r\n    this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\r\n    \r\n    return new Observable<boolean>(this.getResult());\r\n  }\r\n\r\n  private getResult() {\r\n    return (observer) => {\r\n      const subscription = this.bsModelRef.onHidden.subscribe(() => {\r\n        observer.next(this.bsModelRef.content.result);\r\n        observer.complete();\r\n      });\r\n\r\n      return {\r\n        unsubscribe() {\r\n          subscription.unsubscribe();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Member } from '../_models/member';\r\nimport { of, pipe } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { UserParams } from '../_models/userParams';\r\nimport { AccountService } from './account.service';\r\nimport { User } from '../_models/user';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\nimport { Сomplaint } from '../_models/complaint';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MembersService {\r\n  baseUrl = environment.apiUrl;\r\n  members: Member[] = [];\r\n  memberCache = new Map();\r\n  user: User;\r\n  userParams: UserParams;\r\n  username: string;\r\n\r\n  constructor(private http: HttpClient, private accountService: AccountService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\r\n      this.user = user;\r\n      this.userParams = new UserParams(user);\r\n    })\r\n  }\r\n\r\n  getUserParams() {\r\n    return this.userParams;\r\n  }\r\n\r\n  setUserParams(params: UserParams) {\r\n    this.userParams = params;\r\n  }\r\n\r\n  resetUserParams() {\r\n    this.userParams = new UserParams(this.user);\r\n    return this.userParams;\r\n  }\r\n\r\n  getMembers(userParams: UserParams) {\r\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\r\n    if (response) {\r\n      return of(response);\r\n    }\r\n\r\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\r\n\r\n    params = params.append('minAge', userParams.minAge.toString());\r\n    params = params.append('maxAge', userParams.maxAge.toString());\r\n    params = params.append('gender', userParams.gender);\r\n    params = params.append('orderBy', userParams.orderBy);\r\n\r\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params, this.http)\r\n      .pipe(map(response => {\r\n        this.memberCache.set(Object.values(userParams).join('-'), response);\r\n        return response;\r\n      }))\r\n  }\r\n\r\n  getMember(username: string) {\r\n    const member = [...this.memberCache.values()]\r\n      .reduce((arr, elem) => arr.concat(elem.result), [])\r\n      .find((member: Member) => member.username === username);\r\n\r\n    if (member) {\r\n      return of(member);\r\n    }\r\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\r\n  }\r\n\r\n  updateMember(member: Member) {\r\n    return this.http.put(this.baseUrl + 'users', member).pipe(\r\n      map(() => {\r\n        const index = this.members.indexOf(member);\r\n        this.members[index] = member;\r\n      })\r\n    )\r\n  }\r\n\r\n  setMainPhoto(photoId: number) {\r\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\r\n  }\r\n\r\n  addLike(username: string) {\r\n    return this.http.post(this.baseUrl + 'likes/' + username, {})\r\n  }\r\n\r\n  getLikes(predicate: string, pageNumber, pageSize) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('predicate', predicate);\r\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params, this.http);\r\n  }\r\n\r\n  setUsername(username: string){\r\n    this.username = username;\r\n  }\r\n\r\n  getUsername(){\r\n    return this.username;\r\n  }\r\n\r\n  createComplaint(model: any){\r\n    return this.http.post('https://localhost:5001/api/Сomplaints', model);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Group } from '../_models/group';\r\nimport { Message } from '../_models/message';\r\nimport { User } from '../_models/user';\r\nimport { BusyService } from './busy.service';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private busyService: BusyService) { }\r\n\r\n  createHubConnection(user: User, otherUsername: string) {\r\n    this.busyService.busy(); \r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\r\n        accessTokenFactory: () => user.token\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build()\r\n\r\n    this.hubConnection.start()\r\n      .catch(error => console.log(error))\r\n      .finally(() => this.busyService.idle());\r\n\r\n    this.hubConnection.on('ReceiveMessageThread', messages => {\r\n      this.messageThreadSource.next(messages);\r\n    })\r\n\r\n    this.hubConnection.on('NewMessage', message => {\r\n      this.messageThread$.pipe(take(1)).subscribe(messages => {\r\n        this.messageThreadSource.next([...messages, message])\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\r\n      if (group.connections.some(x => x.username === otherUsername)) {\r\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\r\n          messages.forEach(message => {\r\n            if (!message.dateRead) {\r\n              message.dateRead = new Date(Date.now())\r\n            }\r\n          })\r\n          this.messageThreadSource.next([...messages]);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  stopHubConnection() {\r\n    if (this.hubConnection) {\r\n      this.messageThreadSource.next([]);\r\n      this.hubConnection.stop();\r\n    }\r\n  }\r\n\r\n  getMessages(pageNumber, pageSize, container) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\r\n  }\r\n\r\n  getMessageThread(username: string) {\r\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\r\n  }\r\n\r\n  async sendMessage(username: string, content: string) {\r\n    return this.hubConnection.invoke('SendMessage', {recipientUsername: username, content})\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { PaginatedResult } from '../_models/pagination';\r\n\r\nexport function getPaginatedResult<T>(url, params, http: HttpClient) {\r\n    const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n    return http.get<T>(url, { observe: 'response', params }).pipe(\r\n      map(response => {\r\n        paginatedResult.result = response.body;\r\n        if (response.headers.get('Pagination') !== null) {\r\n          paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n        }\r\n        return paginatedResult;\r\n      })\r\n    );\r\n  }\r\n\r\n  export function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('pageNumber', pageNumber.toString());\r\n    params = params.append('pageSize', pageSize.toString());\r\n\r\n    return params;\r\n  }","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PresenceService {\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\r\n  onlineUsers$ = this.onlineUsersSource.asObservable();\r\n\r\n  constructor(private toastr: ToastrService, private router: Router) { }\r\n\r\n  createHubConnection(user: User) {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'presence', {\r\n        accessTokenFactory: () => user.token\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build()\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .catch(error => console.log(error));\r\n\r\n    this.hubConnection.on('UserIsOnline', username => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\r\n        this.onlineUsersSource.next([...usernames, username])\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on('UserIsOffline', username => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\r\n        this.onlineUsersSource.next([...usernames.filter(x => x !== username)])\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\r\n      this.onlineUsersSource.next(usernames);\r\n    })\r\n\r\n    this.hubConnection.on('NewMessageReceived', ({username, knownAs}) => {\r\n      this.toastr.info(knownAs + ' has sent you a new message!')\r\n        .onTap\r\n        .pipe(take(1))\r\n        .subscribe(() => this.router.navigateByUrl('/members/' + username + '?tab=3'));\r\n    })\r\n  }\r\n\r\n  stopHubConnection() {\r\n    this.hubConnection.stop().catch(error => console.log(error));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-panel',\r\n  templateUrl: './admin-panel.component.html',\r\n  styleUrls: ['./admin-panel.component.css']\r\n})\r\nexport class AdminPanelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2>Admin Panel</h2>\r\n<div class=\"tab-panel\">\r\n    <tabset class=\"member-tabset\">\r\n        <tab heading='User management' *appHasRole='[\"Admin\"]'>\r\n            <div class=\"container\">\r\n                <app-user-management></app-user-management>\r\n            </div>\r\n        </tab>\r\n        <tab heading='Photo management' *appHasRole='[\"Admin\", \"Moderator\"]'>\r\n            <div class=\"container\">\r\n                <app-photo-management></app-photo-management>\r\n            </div>\r\n        </tab>\r\n        <tab heading='User block managment' *appHasRole='[\"Admin\"]'>\r\n            <div class=\"container\">\r\n                <app-user-block-managment></app-user-block-managment>\r\n            </div>\r\n        </tab>\r\n    </tabset>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Photo } from 'src/app/_models/photo';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-photo-management',\r\n  templateUrl: './photo-management.component.html',\r\n  styleUrls: ['./photo-management.component.css']\r\n})\r\nexport class PhotoManagementComponent implements OnInit {\r\n  photos: Photo[];\r\n\r\n  constructor(private adminService: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getPhotosForApproval();\r\n  }\r\n\r\n  getPhotosForApproval() {\r\n    this.adminService.getPhotosForApproval().subscribe(photos => {\r\n      this.photos = photos;\r\n    })\r\n  }\r\n\r\n  approvePhoto(photoId) {\r\n    this.adminService.approvePhoto(photoId).subscribe(() => {\r\n      this.photos.splice(this.photos.findIndex(p => p.id === photoId), 1);\r\n    })\r\n  }\r\n\r\n  rejectPhoto(photoId) {\r\n    this.adminService.rejectPhoto(photoId).subscribe(() => {\r\n      this.photos.splice(this.photos.findIndex(p => p.id === photoId), 1);\r\n    })\r\n  }\r\n\r\n\r\n}","<div class='row'>\r\n    <div class='col-sm-2' *ngFor='let photo of photos'>\r\n        <h4>{{photo.username}}</h4>\r\n        <img src='{{photo.url}}' class='img-thumbnail p-1' alt='{{photo.username}}'>\r\n\r\n        <div class='text-center'>\r\n            <button class='btn btn-sm btn-success mr-1' (click)='approvePhoto(photo.id)'>Approve</button>\r\n            <button class='btn btn-sm btn-danger' (click)='rejectPhoto(photo.id)'>Reject</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Сomplaints } from 'src/app/_models/complaints'\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-user-block-managment',\r\n  templateUrl: './user-block-managment.component.html',\r\n  styleUrls: ['./user-block-managment.component.css']\r\n})\r\nexport class UserBlockManagmentComponent implements OnInit {\r\n  complaints: Partial<Сomplaints[]>\r\n\r\n  constructor(private accountService: AdminService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllInfoUsers();\r\n  }\r\n\r\n  getAllInfoUsers() {\r\n    this.accountService.getСomplaints().subscribe(complaints => {\r\n      this.complaints = complaints;\r\n    })\r\n  }\r\n\r\n  approve(complaint: Сomplaints){\r\n    this.accountService.blockUser(complaint.userName).subscribe();\r\n    \r\n      this.accountService.processed(complaint.id).subscribe(()=> {\r\n        this.complaints.splice(this.complaints.findIndex(p => p.id === complaint.id), 1)});\r\n    \r\n    \r\n    this.toastr.success('the application is accepted, the user is blocked');\r\n    this.getAllInfoUsers();\r\n  }\r\n  reject(id: number){\r\n    this.accountService.processed(id).subscribe(()=> {\r\n      this.complaints.splice(this.complaints.findIndex(p => p.id === id), 1)});\r\n  \r\n    this.toastr.success('application rejected');\r\n    this.getAllInfoUsers();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <table class=\"table\">\r\n        <tr>\r\n            <th style=\"width: 30%;\">Username</th>\r\n            <th style=\"width: 30%;\">Text of the complaint</th>\r\n            <th></th>\r\n        </tr>\r\n        <tr *ngFor=\"let complaint of complaints\">\r\n            <td>{{complaint.userName}}</td>\r\n            <td>{{complaint.message}}</td>\r\n            <button class='btn btn-sm btn-success mr-1' (click)='approve(complaint)'>Approve</button>\r\n            <button class='btn btn-sm btn-danger' (click)='reject(complaint.id)'>Reject</button>\r\n        </tr>\r\n    </table>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.css']\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  users: Partial<User[]>;\r\n  bsModalRef: BsModalRef;\r\n\r\n  constructor(private adminService: AdminService, private modalService: BsModalService,\r\n    private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUsersWithRoles();\r\n  }\r\n\r\n  getUsersWithRoles() {\r\n    this.adminService.getUsersWithRoles().subscribe(users => {\r\n      this.users = users;\r\n    })\r\n  }\r\n\r\n  unblock(user: User){\r\n      this.adminService.unblockUser(user.username).subscribe();\r\n      user.isBlocked = false;\r\n\r\n      this.toastr.success('user was succesfully unblocked');\r\n  }\r\n\r\n  openRolesModal(user: User) {\r\n    const config = {\r\n      class: 'modal-dialog-centered',\r\n      initialState: {\r\n        user,\r\n        roles: this.getRolesArray(user)\r\n      }\r\n    }\r\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\r\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values => {\r\n      const rolesToUpdate = {\r\n        roles: [...values.filter(el => el.checked === true).map(el => el.name)]\r\n      };\r\n      if (rolesToUpdate) {\r\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\r\n          user.roles = [...rolesToUpdate.roles]\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private getRolesArray(user) {\r\n    const roles = [];\r\n    const userRoles = user.roles;\r\n    const availableRoles: any[] = [\r\n      {name: 'Admin', value: 'Admin'},\r\n      {name: 'Moderator', value: 'Moderator'},\r\n      {name: 'Member', value: 'Member'}\r\n    ];\r\n\r\n    availableRoles.forEach(role => {\r\n      let isMatch = false;\r\n      for (const userRole of userRoles) {\r\n        if (role.name === userRole) {\r\n          isMatch = true;\r\n          role.checked = true;\r\n          roles.push(role);\r\n          break;\r\n        }\r\n      }\r\n      if (!isMatch) {\r\n        role.checked = false;\r\n        roles.push(role);\r\n      }\r\n    })\r\n    return roles;\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th style=\"width: 30%;\">Username</th>\r\n                <th style=\"width: 40%;\">Active roles</th>\r\n                <th style=\"width: 15%;\"></th>\r\n                <th style=\"width: 15%;\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let user of users\">\r\n                <td>{{user.username}}</td>\r\n                <td>{{user.roles}}</td>\r\n                <td>\r\n                    <button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">Edit Roles</button>\r\n                </td>\r\n                <td>\r\n                    <button *ngIf=\"user.isBlocked\" (click)=\"unblock(user)\" class=\"btn btn-info mrl-5\">Unblock user</button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n\r\n    </table>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {path: 'members', component: MemberListComponent},\r\n      {path: 'members/:username', component: MemberDetailComponent, resolve: {member: MemberDetailedResolver}},\r\n      {path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard]},\r\n      {path: 'lists', component: ListsComponent},\r\n      {path: 'messages', component: MessagesComponent},\r\n      {path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard]},\r\n    ]\r\n  },\r\n  {path: 'errors', component: TestErrorsComponent},\r\n  {path: 'not-found', component: NotFoundComponent},\r\n  {path: 'server-error', component: ServerErrorComponent},\r\n  {path: '**', component: NotFoundComponent, pathMatch: 'full'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from './_models/user';\r\nimport { AccountService } from './_services/account.service';\r\nimport { PresenceService } from './_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'The Dating app';\r\n  users: any;\r\n\r\n  constructor(private accountService: AccountService, private presence: PresenceService) {}\r\n\r\n  ngOnInit() {\r\n    this.setCurrentUser();\r\n  }\r\n\r\n  setCurrentUser() {\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    if (user) {\r\n      this.accountService.setCurrentUser(user);\r\n      this.presence.createHubConnection(user);\r\n    }\r\n\r\n  }\r\n}\r\n","<ngx-spinner>\r\n    <h3>Loading...</h3>\r\n</ngx-spinner>\r\n\r\n<app-nav></app-nav>\r\n\r\n<div class=\"container\" style=\"margin-top: 100px\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\r\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { HasRoleDirective } from './_directives/has-role.directive';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\r\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\r\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\r\nimport { UserBlockManagmentComponent } from './admin/user-block-managment/user-block-managment.component';\r\nimport { ComplaintMessageComponent } from './modals/complaint-message/complaint-message.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    MemberDetailComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    TestErrorsComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    MemberCardComponent,\r\n    MemberEditComponent,\r\n    PhotoEditorComponent,\r\n    TextInputComponent,\r\n    DateInputComponent,\r\n    MemberMessagesComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    PhotoManagementComponent,\r\n    RolesModalComponent,\r\n    ConfirmDialogComponent,\r\n    UserBlockManagmentComponent,\r\n    ComplaintMessageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1>Not found</h1>\r\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>Return to home page</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css']\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n  error: any;\r\n\r\n  constructor(private router: Router) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.error = navigation?.extras?.state?.error;\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h4>Internal server error - refreshing the page will make the error disappear!</h4>\r\n<ng-container *ngIf=\"error\">\r\n    <h5 class='text-danger'>Error: {{error.message}}</h5>\r\n    <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\r\n    <p>What to do next?</p>\r\n    <ol>\r\n        <li>Open the chrome dev tools</li>\r\n        <li>Inspect the network tab</li>\r\n        <li>Check the failing request</li>\r\n        <li>Examine the request URL - make sure it is correct</li>\r\n        <li>Reproduce the error in Postman - if we see the same response, then the issue is not with Angular</li>\r\n    </ol>\r\n    <p>Following is the stack trace - this is where your investigation should start!</p>\r\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-test-errors',\r\n  templateUrl: './test-errors.component.html',\r\n  styleUrls: ['./test-errors.component.css']\r\n})\r\nexport class TestErrorsComponent implements OnInit {\r\n  baseUrl = environment.apiUrl;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get404Error() {\r\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get400Error() {\r\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get500Error() {\r\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get401Error() {\r\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get400ValidationError() {\r\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n      this.validationErrors = error;\r\n    })\r\n  }\r\n\r\n}\r\n","<ng-container>\r\n    <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>\r\n    <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400 Error</button>\r\n    <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">Test 401 Error</button>\r\n    <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404 Error</button>\r\n    <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">\r\n        Test 400 Validation Error</button>\r\n\r\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\r\n        <ul class=\"text-danger\">\r\n            <li *ngFor=\"let error of validationErrors\">\r\n                {{error}}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</ng-container>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  registerMode = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  registerToggle() {\r\n    this.registerMode = !this.registerMode;\r\n  }\r\n\r\n  cancelRegisterMode(event: boolean) {\r\n    this.registerMode = event;\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div *ngIf=\"!registerMode\" style='text-align: center;'>\r\n        <h1>Find your match</h1>\r\n        <p class=\"lead\">Come on in to view your matches... all you need to do is sign up!</p>\r\n        <div class=\"text-center\">\r\n            <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg me-2\">Register</button>\r\n            <button class=\"btn btn-info btn-lg\">Learn more</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"registerMode\" class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-4\">\r\n                <app-register (cancelRegister)=\"cancelRegisterMode($event)\" ></app-register>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Member } from '../_models/member';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.css']\r\n})\r\nexport class ListsComponent implements OnInit {\r\n  members: Partial<Member[]>;\r\n  predicate = 'liked';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  pagination: Pagination;\r\n\r\n  constructor(private memberService: MembersService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadLikes();\r\n  }\r\n  \r\n  loadLikes() {\r\n    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(response => {\r\n      this.members = response.result;\r\n      this.pagination = response.pagination;\r\n    })\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.pageNumber = event.page;\r\n    this.loadLikes();\r\n  }\r\n\r\n}\r\n","<div class=\"text-center mt-3\">\r\n    <h2>{{predicate === 'liked' ? 'Members I like' : 'Members who like me'}}</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n    <div class=\"d-flex\">\r\n        <div class=\"btn-group\" name=\"predicate\">\r\n            <button class=\"btn btn-primary\" btnRadio=\"liked\" \r\n                [(ngModel)]=\"predicate\" (click)=\"loadLikes()\">Members I like</button>\r\n            <button class=\"btn btn-primary\" btnRadio=\"likedBy\" \r\n                [(ngModel)]=\"predicate\" (click)=\"loadLikes()\">Members who like me</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-3\">\r\n        <div class=\"col-2\" *ngFor=\"let member of members\">\r\n            <app-member-card [member]=\"member\"></app-member-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n    <pagination \r\n        [boundaryLinks]=\"true\" \r\n        [totalItems]=\"pagination.totalItems\"\r\n        [itemsPerPage]=\"pagination.itemsPerPage\"\r\n        [(ngModel)]=\"pagination.currentPage\"\r\n        (pageChanged)=\"pageChanged($event)\"\r\n        previousText=\"&lsaquo;\" \r\n        nextText=\"&rsaquo;\" \r\n        firstText=\"&laquo;\" \r\n        lastText=\"&raquo;\">\r\n</pagination>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css'],\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n  @Input() member: Member;\r\n\r\n  constructor(private memberService: MembersService, private toastr: ToastrService, \r\n    public presence: PresenceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addLike(member: Member) {\r\n    this.memberService.addLike(member.username).subscribe(() => {\r\n      this.toastr.success('You have liked ' + member.knownAs);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"card mb-4\">\r\n    <div class=\"card-img-wrapper\">\r\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\r\n        <ul class=\"list-inline member-icons animate text-center\">\r\n            <li class=\"list-inline-item\"><button routerLink='/members/{{member.username}}' class=\"btn btn-primary\">\r\n                <i class=\"fa fa-user\"></i></button></li>\r\n            <li class=\"list-inline-item\"><button (click)=\"addLike(member)\" class=\"btn btn-primary\">\r\n                <i class=\"fa fa-heart\"></i></button></li>\r\n            <li class=\"list-inline-item\">\r\n                <button \r\n                    routerLink='/members/{{member.username}}' \r\n                    [queryParams]='{tab: 3}'\r\n                    class=\"btn btn-primary\">\r\n                <i class=\"fa fa-envelope\"></i>\r\n            </button></li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"card-body p-1\">\r\n        <h6 class=\"card-title text-center mb-1\">\r\n            <span [class.is-online]=\"(presence.onlineUsers$ | async).includes(member.username)\">\r\n                <i class=\"fa fa-user mr-2\"></i>\r\n            </span>\r\n            \r\n            {{member.knownAs}}, {{member.age}}\r\n        </h6>\r\n        <p class=\"card-text text-muted text-center\">{{member.city}}</p>\r\n    </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from '@kolkov/ngx-gallery';\r\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { User } from 'src/app/_models/user';\r\nimport { take } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { ComplaintMessageComponent } from 'src/app/modals/complaint-message/complaint-message.component';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css']\r\n})\r\nexport class MemberDetailComponent implements OnInit, OnDestroy {\r\n  @ViewChild('memberTabs', {static: true}) memberTabs: TabsetComponent;\r\n  member: Member;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  activeTab: TabDirective;\r\n  messages: Message[] = [];\r\n  user: User;\r\n  memberUsername: string = '';\r\n  bsModalRef: BsModalRef;\r\n\r\n  constructor(public presence: PresenceService, private route: ActivatedRoute, \r\n    private messageService: MessageService, private accountService: AccountService, \r\n    private memberService: MembersService, private toastr: ToastrService, \r\n    private router: Router, private modalService: BsModalService,) \r\n    { \r\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n      this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.member = data.member;\r\n    })\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\r\n    })\r\n\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\r\n    ]\r\n\r\n    this.galleryImages = this.getImages();\r\n  }\r\n\r\n  getImages(): NgxGalleryImage[] {\r\n    const imageUrls = [];\r\n    for (const photo of this.member.photos) {\r\n      imageUrls.push({\r\n        small: photo?.url,\r\n        medium: photo?.url,\r\n        big: photo?.url\r\n      })\r\n    }\r\n    return imageUrls;\r\n  }\r\n\r\n  loadMessages() {\r\n    this.messageService.getMessageThread(this.member.username).subscribe(messages => {\r\n      this.messages = messages;\r\n    })\r\n  }\r\n\r\n  selectTab(tabId: number) {\r\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\r\n\r\n  onTabActivated(data: TabDirective) {\r\n    this.activeTab = data;\r\n    if (this.activeTab.heading === 'Messages' && this.messages.length === 0) {\r\n      this.messageService.createHubConnection(this.user, this.member.username);\r\n    } else {\r\n      this.messageService.stopHubConnection();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.messageService.stopHubConnection();\r\n  }\r\n\r\n  addLike(member: Member) {\r\n    this.memberService.addLike(member.username).subscribe(() => {\r\n      this.toastr.success('You have liked ' + member.knownAs);\r\n    })\r\n  }\r\n\r\n  makeComplaint(member: Member){\r\n    \r\n    this.memberService.setUsername(member.username);\r\n    this.bsModalRef = this.modalService.show(ComplaintMessageComponent);\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \r\n                class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div class=\"mb-2\" *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\" >\r\n                    <i class=\"fa fa-user-circle text-success\"></i> Online now\r\n                </div>\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last Active:</strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member since:</strong>\r\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"btn-group d-flex\">\r\n                    <button (click)=\"addLike(member)\" class=\"btn btn-primary\">Like</button>\r\n                    <button (click)=\"selectTab(3)\" class=\"btn btn-success\">Message</button>\r\n                    <button (click)=\"makeComplaint(member)\" class=\"btn btn-danger\">Complaint</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\" #memberTabs>\r\n            <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Description</h4>\r\n                <p>{{member.introduction}}</p>\r\n                <h4>Looking for</h4>\r\n                <p>{{member.lookingFor}}</p>\r\n            </tab>\r\n            <tab heading='Interests' (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Interests</h4>\r\n                <p>{{member.interests}}</p>\r\n            </tab>\r\n            <tab heading='Photos' (selectTab)=\"onTabActivated($event)\">\r\n                <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" \r\n                    style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\r\n            </tab>\r\n            <tab heading='Messages' (selectTab)=\"onTabActivated($event)\">\r\n                <app-member-messages [username]=\"member.username\"></app-member-messages>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { take } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css']\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  member: Member;\r\n  user: User;\r\n  @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\r\n    if (this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(private accountService: AccountService, private memberService: MembersService, \r\n    private toastr: ToastrService) { \r\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMember();\r\n  }\r\n\r\n  loadMember() {\r\n    this.memberService.getMember(this.user.username).subscribe(member => {\r\n      this.member = member;\r\n    })\r\n  }\r\n\r\n  updateMember() {\r\n    this.memberService.updateMember(this.member).subscribe(() => {\r\n      this.toastr.success('Profile updated successfully');\r\n      this.editForm.reset(this.member);\r\n    })\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"member\">\r\n    <div class=\"col-4\">\r\n        <h1>Your profile</h1>\r\n    </div>\r\n    <div class=\"col-8\">\r\n        <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\r\n            <strong>Information: </strong> You have made changes.  Any unsaved changes will be lost\r\n        </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \r\n                class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last Active:</strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member since:</strong>\r\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <button [disabled]=\"!editForm.dirty\" form=\"editForm\" type=\"submit\" class=\"btn btn-success btn-block\">Save Changes</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\">\r\n            <tab heading='About {{member.knownAs}}'>\r\n                <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\r\n                    <h4>Description</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Looking for</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Interests</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Location Details: </h4>\r\n                    <div class=\"form-inline\">\r\n                        <label for=\"city\">City: </label>\r\n                        <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\r\n                        <label for=\"city\">Country: </label>\r\n                        <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\r\n                    </div>\r\n                </form>\r\n               \r\n            </tab>\r\n            <tab heading='Edit Photos'>\r\n                <app-photo-editor [member]=\"member\"></app-photo-editor>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Pagination } from 'src/app/_models/pagination';\r\nimport { UserParams } from 'src/app/_models/userParams';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { take } from 'rxjs/operators';\r\nimport { User } from 'src/app/_models/user';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  members: Member[];\r\n  pagination: Pagination;\r\n  userParams: UserParams;\r\n  user: User;\r\n  genderList = [{ value: 'male', display: 'Males' }, { value: 'female', display: 'Females' }];\r\n\r\n  constructor(private memberService: MembersService) {\r\n    this.userParams = this.memberService.getUserParams();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMembers();\r\n  }\r\n\r\n  loadMembers() {\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.memberService.getMembers(this.userParams).subscribe(response => {\r\n      this.members = response.result;\r\n      this.pagination = response.pagination;\r\n    })\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams = this.memberService.resetUserParams();\r\n    this.loadMembers();\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.userParams.pageNumber = event.page;\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.loadMembers();\r\n  }\r\n}\r\n","<div class=\"text-center mt-3\">\r\n    <h2>Your matches - {{pagination?.totalItems}} found</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n    <form #form=\"ngForm\" class=\"d-flex mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\r\n        <div class=\"d-flex mx-2\">\r\n            <label class=\"col-form-label me-2\">Age from: </label>\r\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"minAge\" \r\n                [(ngModel)]=\"userParams.minAge\">\r\n        </div>\r\n\r\n        <div class=\"d-flex px-2\">\r\n            <label class=\"col-form-label me-2\">Age to: </label>\r\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"maxAge\" \r\n                [(ngModel)]=\"userParams.maxAge\">\r\n        </div>\r\n\r\n        <div class=\"d-flex px-2\">\r\n            <label class=\"col-form-label me-2\">Show: </label>\r\n            <select name=\"gender\" style=\"width: 130px\" [(ngModel)]=\"userParams.gender\" class=\"form-control ml-1\">\r\n                <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\r\n                    {{gender.display}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n\r\n        <button class=\"btn btn-primary ms-1\" type=\"submit\">Apply Filters</button>\r\n        <button (click)=\"resetFilters()\" class=\"btn btn-info ms-1\" type=\"submit\">Reset Filters</button>\r\n        <div class=\"col\">\r\n            <div class=\"btn-group float-end\">\r\n                <button \r\n                    type=\"button\"\r\n                    class=\"btn btn-primary\" \r\n                    name='orderBy' \r\n                    (click)=\"loadMembers()\"\r\n                    btnRadio='lastActive'\r\n                    [(ngModel)]=\"userParams.orderBy\">Last Active</button>\r\n    \r\n                <button \r\n                    type=\"button\"\r\n                    class=\"btn btn-primary\" \r\n                    name='orderBy' \r\n                    (click)=\"loadMembers()\"\r\n                    btnRadio='created'\r\n                    [(ngModel)]=\"userParams.orderBy\">Newest Members</button>\r\n            </div>\r\n        </div>\r\n        \r\n\r\n    </form>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div *ngFor=\"let member of members\" class=\"col-2\">\r\n        <app-member-card [member]=\"member\"></app-member-card>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n    <pagination \r\n        [boundaryLinks]=\"true\" \r\n        [totalItems]=\"pagination.totalItems\"\r\n        [itemsPerPage]=\"pagination.itemsPerPage\"\r\n        [(ngModel)]=\"pagination.currentPage\"\r\n        (pageChanged)=\"pageChanged($event)\"\r\n        [maxSize]=\"10\"\r\n        previousText=\"&lsaquo;\" \r\n        nextText=\"&rsaquo;\" \r\n        firstText=\"&laquo;\" \r\n        lastText=\"&raquo;\">\r\n</pagination>\r\n</div>","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css']\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm: NgForm;\r\n  @Input() messages: Message[];\r\n  @Input() username: string;\r\n  messageContent: string;\r\n  loading = false;\r\n\r\n  constructor(public messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessage() {\r\n    this.loading = true;\r\n    this.messageService.sendMessage(this.username, this.messageContent)\r\n    .then(() => {\r\n      this.messageForm.reset();\r\n    })\r\n    .finally(() => this.loading = false);\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-body\"\r\n        #scrollMe\r\n        style=\"overflow: scroll; height: 535px;\"\r\n        [scrollTop]=\"scrollMe.scrollHeight\"\r\n    >\r\n        <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n            No messages yet... say hi by using the message box below\r\n        </div>\r\n\r\n        <ul \r\n            *ngIf=\"(messageService.messageThread$ | async).length > 0\" \r\n            class=\"chat\">\r\n            <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\r\n                <div>\r\n                    <span class=\"chat-img float-end\">\r\n                        <img class=\"rounded-circle\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" \r\n                            alt=\"{{message.senderUsername}}\">\r\n                    </span>\r\n                    <div class=\"chat-body\">\r\n                        <div class=\"header\">\r\n                            <small class=\"text-muted\">\r\n                                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\r\n                                <span class=\"text-danger\" *ngIf=\"!message.dateRead \r\n                                    && message.senderUsername !== username\">\r\n                                    (unread)\r\n                                </span>\r\n                                <span class=\"text-success\" *ngIf=\"message.dateRead \r\n                                    && message.senderUsername !== username\">\r\n                                    (read {{message.dateRead | timeago}})\r\n                                </span>\r\n                            </small>\r\n                        </div>\r\n                        <p>{{message.content}}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"card-footer\">\r\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n            <div class=\"input-group\">\r\n                <input \r\n                    name=\"messageContent\"\r\n                    required\r\n                    [(ngModel)]=\"messageContent\"\r\n                    type=\"text\" \r\n                    class=\"form-control input-sm\" \r\n                    placeholder=\"Send a private message\">\r\n                <div class=\"input-group-append\">\r\n                    <button [disabled]=\"!messageForm.valid || loading\" class=\"btn btn-primary\" type=\"submit\">Send\r\n                        <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { User } from 'src/app/_models/user';\r\nimport { take } from 'rxjs/operators';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { Photo } from 'src/app/_models/photo';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() member: Member;\r\n  uploader: FileUploader;\r\n  hasBaseDropzoneOver = false;\r\n  baseUrl = environment.apiUrl;\r\n  user: User;\r\n\r\n  constructor(private accountService: AccountService, private memberService: MembersService) { \r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n  fileOverBase(e: any) {\r\n    this.hasBaseDropzoneOver = e;\r\n  }\r\n\r\n  setMainPhoto(photo: Photo) {\r\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\r\n      this.user.photoUrl = photo.url;\r\n      this.accountService.setCurrentUser(this.user);\r\n      this.member.photoUrl = photo.url;\r\n      this.member.photos.forEach(p => {\r\n        if (p.isMain) p.isMain = false;\r\n        if (p.id === photo.id) p.isMain = true;\r\n      })\r\n    })\r\n  } \r\n\r\n  deletePhoto(photoId: number) {\r\n    this.memberService.deletePhoto(photoId).subscribe(() => {\r\n      this.member.photos = this.member.photos.filter(x => x.id !== photoId);\r\n    })\r\n  }\r\n\r\n  initializeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'users/add-photo',\r\n      authToken: 'Bearer ' + this.user.token,\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false;\r\n    }\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const photo: Photo = JSON.parse(response);\r\n        this.member.photos.push(photo);\r\n         if (photo.isMain) {\r\n           this.user.photoUrl = photo.url;\r\n           this.member.photoUrl = photo.url;\r\n           this.accountService.setCurrentUser(this.user);\r\n         }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-2 img-wrapper\" *ngFor=\"let photo of member.photos\">\r\n        <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\" [class.not-approved]=\"!photo.isApproved\">\r\n    \r\n        <div class=\"text-center img-text\" *ngIf=\"!photo.isApproved\">\r\n            <span class=\"text-danger\">Awaiting approval</span>\r\n        </div>\r\n    \r\n        <div class=\"text-center\">\r\n            <button \r\n                [disabled]=\"photo.isMain || !photo.isApproved\"\r\n                (click)=\"setMainPhoto(photo)\"\r\n                [ngClass]='photo.isMain ? \"btn-success active\" : \"btn-outline-success\"'\r\n                class=\"btn btn-sm\"\r\n            >Main</button>\r\n            <button \r\n                [disabled]=\"photo.isMain\"\r\n                (click)=\"deletePhoto(photo.id)\"\r\n                class=\"btn btn-sm btn-danger\"\r\n            ><i class=\"fa fa-trash\"></i></button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row mt-3\">\r\n \r\n    <div class=\"col-md-3\">\r\n\r\n        <h3>Add Photos</h3>\r\n\r\n        <div ng2FileDrop\r\n             [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\"\r\n             (fileOver)=\"fileOverBase($event)\"\r\n             [uploader]=\"uploader\"\r\n             class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\r\n             <i class=\"fa fa-upload fa-3x\"></i>\r\n            Drop photos here\r\n        </div>\r\n\r\n        Multiple\r\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\r\n\r\n        Single\r\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\r\n    </div>\r\n\r\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\r\n\r\n        <h3>Upload queue</h3>\r\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n\r\n        <table class=\"table\">\r\n            <thead>\r\n            <tr>\r\n                <th width=\"50%\">Name</th>\r\n                <th>Size</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr *ngFor=\"let item of uploader.queue\">\r\n                <td><strong>{{ item?.file?.name }}</strong></td>\r\n                <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <div>\r\n            <div>\r\n                Queue progress:\r\n                <div class=\"progress\">\r\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-success btn-s\"\r\n                    (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\r\n                <span class=\"fa fa-upload\"></span> Upload all\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-warning btn-s\"\r\n                    (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\r\n                <span class=\"fa fa-ban\"></span> Cancel all\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-danger btn-s\"\r\n                    (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\r\n                <span class=\"fa fa-trash\"></span> Remove all\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Message } from '../_models/message';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\nimport { MessageService } from '../_services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n  messages: Message[] = [];\r\n  pagination: Pagination;\r\n  container = 'Unread';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  loading = false;\r\n\r\n  constructor(private messageService: MessageService, private confirmService: ConfirmService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMessages();\r\n  }\r\n\r\n  loadMessages() {\r\n    this.loading = true;\r\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container).subscribe(response => {\r\n      this.messages = response.result;\r\n      this.pagination = response.pagination;\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    this.confirmService.confirm('Confirm delete message', 'This cannot be undone').subscribe(result => {\r\n      if (result) {\r\n        this.messageService.deleteMessage(id).subscribe(() => {\r\n          this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\r\n        })\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    if (this.pageNumber !== event.page) {\r\n      this.pageNumber = event.page;\r\n      this.loadMessages();\r\n    }\r\n  }\r\n}\r\n","<div class=\"d-flex mb-4\">\r\n    <div class=\"btn-group\" name='container'>\r\n        <button class=\"btn btn-primary\" btnRadio='Unread' [(ngModel)]=\"container\" \r\n            (click)=\"loadMessages()\">\r\n            <i class=\"fa fa-envelope\"></i> Unread\r\n        </button>\r\n        <button class=\"btn btn-primary\" btnRadio='Inbox' [(ngModel)]=\"container\" \r\n            (click)=\"loadMessages()\">\r\n            <i class=\"fa fa-envelope-open\"></i> Inbox\r\n        </button>\r\n        <button class=\"btn btn-primary\" btnRadio='Outbox' [(ngModel)]=\"container\" \r\n            (click)=\"loadMessages()\">\r\n            <i class=\"fa fa-paper-plane\"></i> Outbox\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\r\n    <h3>No messages</h3>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\r\n    <table class=\"table table-hover\" style=\"cursor: pointer\">\r\n        <thead>\r\n            <tr>\r\n                <th style=\"width: 40%\">Message</th>\r\n                <th style=\"width: 20%\">From / To</th>\r\n                <th style=\"width: 20%\">Sent / Received</th>\r\n                <th style=\"width: 20%\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr [hidden]=\"loading\" *ngFor=\"let message of messages\" \r\n            routerLink='{{container === \"Outbox\" \r\n                ? \"/members/\" + message.recipientUsername \r\n                : \"/members/\" + message.senderUsername}}' [queryParams]='{tab: 3}' >\r\n            <td>{{message.content}}</td>    \r\n            <td>\r\n                <div *ngIf=\"container === 'Outbox'\">\r\n                    <img \r\n                        class=\"img-circle rounded-circle me-2\"\r\n                        src=\"{{message.recipientPhotoUrl || './assets/user.png'}}\" \r\n                        alt=\"{{message.recipientUsername}}\">\r\n                    <strong>{{message.recipientUsername | titlecase}}</strong>\r\n                </div> \r\n                <div *ngIf=\"container !== 'Outbox'\">\r\n                    <img \r\n                        class=\"img-circle rounded-circle me-2\"\r\n                        src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" \r\n                        alt=\"{{message.senderUsername}}\">\r\n                    <strong>{{message.senderUsername | titlecase}}</strong>\r\n                </div> \r\n            </td>\r\n            <td>{{message.messageSent | timeago}}</td>\r\n            <td>\r\n                <button (click)=\"$event.stopPropagation()\" (click)=\"deleteMessage(message.id)\" class='btn btn-danger'>Delete</button>\r\n            </td>\r\n            </tr>\r\n        </tbody>\r\n        \r\n    </table>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\r\n    <pagination \r\n        [boundaryLinks]=\"true\" \r\n        [totalItems]=\"pagination.totalItems\"\r\n        [itemsPerPage]=\"pagination.itemsPerPage\"\r\n        [(ngModel)]=\"pagination.currentPage\"\r\n        (pageChanged)=\"pageChanged($event)\"\r\n        [maxSize]=\"10\"\r\n        previousText=\"&lsaquo;\" \r\n        nextText=\"&rsaquo;\" \r\n        firstText=\"&laquo;\" \r\n        lastText=\"&raquo;\">\r\n</pagination>\r\n</div>","import { Component, OnInit, Input, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MemberDetailComponent } from 'src/app/members/member-detail/member-detail.component';\r\nimport { Сomplaint } from 'src/app/_models/complaint';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-complaint-message',\r\n  templateUrl: './complaint-message.component.html',\r\n  styleUrls: ['./complaint-message.component.css']\r\n})\r\nexport class ComplaintMessageComponent implements OnInit {\r\n\r\n  @Input() updateSelectedRoles = new EventEmitter();\r\n\r\n  constructor(\r\n    public bsModalRef: BsModalRef, \r\n    private memberService: MembersService, private fb: FormBuilder, private adminService: AdminService,\r\n    private toastr: ToastrService ) { }\r\n\r\n  userName: string = \"\";\r\n  complaintForm: FormGroup;\r\n  message: string =\"\";\r\n\r\n  ngOnInit(): void {\r\n    this.userName = this.memberService.getUsername();\r\n    this.intitializeForm();\r\n  }\r\n\r\n  intitializeForm() {\r\n    this.complaintForm = this.fb.group({\r\n      message: ['', Validators.required],\r\n      userName: [this.userName],\r\n    })\r\n  }\r\n\r\n  sendComplaint() : void{\r\n    let complaint:Сomplaint = this.complaintForm.value;\r\n    this.memberService.createComplaint(complaint).subscribe(() => {\r\n      this.toastr.success('your application has been submitted for review');\r\n    });\r\n  }\r\n}\r\n","<form [formGroup]='complaintForm' (ngSubmit)=\"sendComplaint()\" >\r\n    <div class=\"modal-header\">\r\n        <div>\r\n            <strong>Please</strong> <small> enter message for administrator</small>\r\n        </div>\r\n        <button type=\"button\" class=\"close pull-right btn btn-info \" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\r\n            <i class=\"fa fa-close\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\"></i>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"name\">Message</label>\r\n                    <textarea class=\"form-control ng-untouched ng-pristine ng-valid\" id=\"name\" type=\"text\"\r\n                        placeholder=\"Enter your message\" [formControl]='complaintForm.controls[\"message\"]'> </textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-success\" type=\"submit\" [disabled]='!complaintForm.valid'>Submit</button>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n  title: string;\r\n  message: string;\r\n  btnOkText: string;\r\n  btnCancelText: string;\r\n  result: boolean;\r\n\r\n  constructor(public bsModalRef: BsModalRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  confirm() {\r\n    this.result = true;\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n  decline() {\r\n    this.result = false;\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p>{{message}}</p>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">{{btnOkText}}</button>\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancelText}}</button>\r\n  </div>\r\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { User } from 'src/app/_models/user';\r\n\r\n@Component({\r\n  selector: 'app-roles-modal',\r\n  templateUrl: './roles-modal.component.html',\r\n  styleUrls: ['./roles-modal.component.css']\r\n})\r\nexport class RolesModalComponent implements OnInit {\r\n  @Input() updateSelectedRoles = new EventEmitter();\r\n  user: User;\r\n  roles: any[]; \r\n\r\n  constructor(public bsModalRef: BsModalRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  updateRoles() {\r\n    this.updateSelectedRoles.emit(this.roles);\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form #rolesForm=\"ngForm\" id=\"rolesForm\">\r\n        <div class=\"form-check\" *ngFor=\"let role of roles\">\r\n            <input type=\"checkbox\"\r\n                class=\"form-check-input\"\r\n                [checked]=\"role.checked\"\r\n                value=\"role.name\"\r\n                (change)=\"role.checked = !role.checked\"\r\n                [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\r\n            >\r\n            <label>{{role.name}}</label>\r\n        </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\r\n  </div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {}\r\n\r\n  constructor(public accountService: AccountService, private router: Router, \r\n    private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login() {\r\n    this.accountService.login(this.model).subscribe(response => {\r\n      this.router.navigateByUrl('/members');\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();\r\n    this.router.navigateByUrl('/')\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n    <div class=\"container\">\r\n        <a class=\"navbar-brand\" routerLink='/' routerLinkActive='active'>Dating App</a>\r\n\r\n        <ul class=\"navbar-nav me-auto\">\r\n            <ng-container *ngIf=\"accountService.currentUser$ | async\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink='/members' routerLinkActive='active' >Matches</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink='/lists' routerLinkActive='active'>Lists</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink='/messages'routerLinkActive='active' >Messages</a>\r\n                </li>\r\n                <li *appHasRole='[\"Admin\", \"Moderator\"]' class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink='/admin'routerLinkActive='active' >Admin</a>\r\n                </li>\r\n            </ng-container>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" routerLink='/errors'routerLinkActive='active' >Errors</a>\r\n            </li>\r\n        </ul>\r\n\r\n        <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\r\n            <img src=\"{{user.photoUrl || './assets/user.png'}}\" alt=\"{{user.username}}\">\r\n            <a class=\"dropdown-toggle text-light ms-2 text-decoration-none\" dropdownToggle>Welcome {{user.knownAs || user.username | titlecase}}</a>\r\n            <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n                <a routerLink='/member/edit' class=\"dropdown-item\">Edit Profile</a>\r\n                <div class=\"dropdown-divider\"></div>\r\n                <a class=\"dropdown-item\" (click)=\"logout()\" >Logout</a>\r\n            </div>\r\n        </div>\r\n\r\n        <form *ngIf=\"(accountService.currentUser$ | async) === null\" #loginForm=\"ngForm\" class=\"d-flex mt-2 mt-md-0\" (ngSubmit)=\"login()\" \r\n            autocomplete=\"off\">\r\n            <input \r\n                name=\"username\"\r\n                [(ngModel)]=\"model.username\"\r\n                class=\"form-control me-sm-2\" \r\n                type=\"text\" \r\n                placeholder=\"Username\">\r\n            <input \r\n                name=\"password\"\r\n                [(ngModel)]=\"model.password\"\r\n                class=\"form-control me-sm-2\" \r\n                type=\"password\" \r\n                placeholder=\"Password\">\r\n            <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n        </form>\r\n    </div>\r\n\r\n</nav>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  registerForm: FormGroup;\r\n  maxDate: Date;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(private accountService: AccountService, private toastr: ToastrService, \r\n    private fb: FormBuilder, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.intitializeForm();\r\n    this.maxDate = new Date();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() -18);\r\n  }\r\n\r\n  intitializeForm() {\r\n    this.registerForm = this.fb.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: ['', [Validators.required, \r\n        Validators.minLength(4), Validators.maxLength(8)]],\r\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\r\n    })\r\n  }\r\n\r\n  matchValues(matchTo: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      return control?.value === control?.parent?.controls[matchTo].value \r\n        ? null : {isMatching: true}\r\n    }\r\n  }\r\n\r\n  register() {\r\n    this.accountService.register(this.registerForm.value).subscribe(response => {\r\n      this.router.navigateByUrl('/members');\r\n    }, error => {\r\n      this.validationErrors = error;\r\n    })\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n\r\n}\r\n","<form [formGroup]='registerForm' (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\r\n    <h2 class=\"text-center text-primary\">Sign up</h2>\r\n    <hr>\r\n\r\n    <div class=\"mb-3\">\r\n        <label style=\"margin-right: 10px;\">I am a: </label>\r\n        <label class=\"form-check-label\">\r\n            <input class=\"form-check-input\" type=\"radio\" value='male' formControlName='gender'> Male\r\n        </label>\r\n        <label class=\"form-check-label\">\r\n            <input type=\"radio\" value='female' formControlName='gender' class=\"form-check-input ms-3\"> Female\r\n        </label>\r\n    </div>\r\n\r\n    <app-text-input [formControl]='registerForm.controls[\"username\"]' \r\n        [label]='\"Username\"'></app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"knownAs\"]' \r\n        [label]='\"Known As\"'></app-text-input>\r\n    <app-date-input [formControl]='registerForm.controls[\"dateOfBirth\"]' \r\n        [label]='\"Date Of Birth\"' [maxDate]='maxDate'></app-date-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"city\"]' \r\n        [label]='\"City\"'></app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"country\"]' \r\n        [label]='\"Country\"'></app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"password\"]' \r\n        [label]='\"Password\"' [type]='\"password\"'>\r\n    </app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"confirmPassword\"]' \r\n        [label]='\"Confirm Password\"'\r\n        [type]='\"password\"'></app-text-input>\r\n\r\n    <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\r\n        <ul class=\"text-danger\">\r\n            <li *ngFor=\"let error of validationErrors\">\r\n                {{error}}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"form-group text-center\">\r\n        <button [disabled]='!registerForm.valid' class=\"btn btn-success mr-2\" type=\"submit\">Register</button>\r\n        <button class=\"btn btn-default mr-2\" (click)=\"cancel()\" type=\"button\">Cancel</button>\r\n    </div>\r\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/api/',\r\n  hubUrl: 'https://localhost:5001/hubs/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}